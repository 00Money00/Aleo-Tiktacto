---
namespace: Compile
expectation: Pass
outputs:
  - circuit:
      num_public_variables: 0
      num_private_variables: 26
      num_constraints: 21
      at: b4c72e270b0067ca380a70c8cb2632c33b17e7323b3817deb04e5fe72aa99c13
      bt: d476126ef8e9588f0ed444a75f025c1c468618ae84829d4d2deb37679e537563
      ct: 789b2eca89cbf96799b7c12eaa66df8efcec7fe1c6c8af5e741fe4955c5dee32
    output:
      - input_file: input/main_string.in
        output:
          registers:
            r0:
              type: bool
              value: "true"
    initial_theorem:
      name: ""
      expected_input: []
      imports: []
      circuits: {}
      global_consts: {}
      functions:
        "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: [char; 5], y: bool) -> bool {\\\"}\"}":
          annotations: []
          identifier: "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: [char; 5], y: bool) -> bool {\\\"}\"}"
          input:
            - Variable:
                identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":15,\\\"col_stop\\\":16,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: [char; 5], y: bool) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  Array:
                    - Char
                    - - value: "5"
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 15
                  col_stop: 16
                  path: compiler-test
                  content: "function main(a: [char; 5], y: bool) -> bool {"
            - Variable:
                identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":29,\\\"col_stop\\\":30,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: [char; 5], y: bool) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_: Boolean
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 29
                  col_stop: 30
                  path: compiler-test
                  content: "function main(a: [char; 5], y: bool) -> bool {"
          output: Boolean
          block:
            statements:
              - Return:
                  expression:
                    Binary:
                      left:
                        Binary:
                          left:
                            Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":12,\\\"col_stop\\\":13,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return y == true && a == \\\\\\\"😭😂👍😁😘\\\\\\\";\\\"}\"}"
                          right:
                            Value:
                              Boolean:
                                - "true"
                                - line_start: 4
                                  line_stop: 4
                                  col_start: 17
                                  col_stop: 21
                                  path: compiler-test
                                  content: "    return y == true && a == \"😭😂👍😁😘\";"
                          op: Eq
                          span:
                            line_start: 4
                            line_stop: 4
                            col_start: 12
                            col_stop: 21
                            path: compiler-test
                            content: "    return y == true && a == \"😭😂👍😁😘\";"
                      right:
                        Binary:
                          left:
                            Identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":25,\\\"col_stop\\\":26,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return y == true && a == \\\\\\\"😭😂👍😁😘\\\\\\\";\\\"}\"}"
                          right:
                            Value:
                              String:
                                - - Scalar: 128557
                                  - Scalar: 128514
                                  - Scalar: 128077
                                  - Scalar: 128513
                                  - Scalar: 128536
                                - line_start: 4
                                  line_stop: 4
                                  col_start: 30
                                  col_stop: 52
                                  path: compiler-test
                                  content: "    return y == true && a == \"😭😂👍😁😘\";"
                          op: Eq
                          span:
                            line_start: 4
                            line_stop: 4
                            col_start: 25
                            col_stop: 52
                            path: compiler-test
                            content: "    return y == true && a == \"😭😂👍😁😘\";"
                      op: And
                      span:
                        line_start: 4
                        line_stop: 4
                        col_start: 12
                        col_stop: 52
                        path: compiler-test
                        content: "    return y == true && a == \"😭😂👍😁😘\";"
                  span:
                    line_start: 4
                    line_stop: 4
                    col_start: 5
                    col_stop: 52
                    path: compiler-test
                    content: "    return y == true && a == \"😭😂👍😁😘\";"
            span:
              line_start: 3
              line_stop: 5
              col_start: 46
              col_stop: 2
              path: compiler-test
              content: "function main(a: [char; 5], y: bool) -> bool {\n...\n}"
          span:
            line_start: 3
            line_stop: 5
            col_start: 1
            col_stop: 2
            path: compiler-test
            content: "function main(a: [char; 5], y: bool) -> bool {\n...\n}"
    canonicalized_theorem:
      name: ""
      expected_input: []
      imports: []
      circuits: {}
      global_consts: {}
      functions:
        "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: [char; 5], y: bool) -> bool {\\\"}\"}":
          annotations: []
          identifier: "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: [char; 5], y: bool) -> bool {\\\"}\"}"
          input:
            - Variable:
                identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":15,\\\"col_stop\\\":16,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: [char; 5], y: bool) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  Array:
                    - Char
                    - - value: "5"
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 15
                  col_stop: 16
                  path: compiler-test
                  content: "function main(a: [char; 5], y: bool) -> bool {"
            - Variable:
                identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":29,\\\"col_stop\\\":30,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: [char; 5], y: bool) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_: Boolean
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 29
                  col_stop: 30
                  path: compiler-test
                  content: "function main(a: [char; 5], y: bool) -> bool {"
          output: Boolean
          block:
            statements:
              - Return:
                  expression:
                    Binary:
                      left:
                        Binary:
                          left:
                            Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":12,\\\"col_stop\\\":13,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return y == true && a == \\\\\\\"😭😂👍😁😘\\\\\\\";\\\"}\"}"
                          right:
                            Value:
                              Boolean:
                                - "true"
                                - line_start: 4
                                  line_stop: 4
                                  col_start: 17
                                  col_stop: 21
                                  path: compiler-test
                                  content: "    return y == true && a == \"😭😂👍😁😘\";"
                          op: Eq
                          span:
                            line_start: 4
                            line_stop: 4
                            col_start: 12
                            col_stop: 21
                            path: compiler-test
                            content: "    return y == true && a == \"😭😂👍😁😘\";"
                      right:
                        Binary:
                          left:
                            Identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":25,\\\"col_stop\\\":26,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return y == true && a == \\\\\\\"😭😂👍😁😘\\\\\\\";\\\"}\"}"
                          right:
                            ArrayInline:
                              elements:
                                - Expression:
                                    Value:
                                      Char:
                                        character:
                                          Scalar: 128557
                                        span:
                                          line_start: 4
                                          line_stop: 4
                                          col_start: 31
                                          col_stop: 32
                                          path: compiler-test
                                          content: "    return y == true && a == \"😭😂👍😁😘\";"
                                - Expression:
                                    Value:
                                      Char:
                                        character:
                                          Scalar: 128514
                                        span:
                                          line_start: 4
                                          line_stop: 4
                                          col_start: 32
                                          col_stop: 33
                                          path: compiler-test
                                          content: "    return y == true && a == \"😭😂👍😁😘\";"
                                - Expression:
                                    Value:
                                      Char:
                                        character:
                                          Scalar: 128077
                                        span:
                                          line_start: 4
                                          line_stop: 4
                                          col_start: 33
                                          col_stop: 34
                                          path: compiler-test
                                          content: "    return y == true && a == \"😭😂👍😁😘\";"
                                - Expression:
                                    Value:
                                      Char:
                                        character:
                                          Scalar: 128513
                                        span:
                                          line_start: 4
                                          line_stop: 4
                                          col_start: 34
                                          col_stop: 35
                                          path: compiler-test
                                          content: "    return y == true && a == \"😭😂👍😁😘\";"
                                - Expression:
                                    Value:
                                      Char:
                                        character:
                                          Scalar: 128536
                                        span:
                                          line_start: 4
                                          line_stop: 4
                                          col_start: 35
                                          col_stop: 36
                                          path: compiler-test
                                          content: "    return y == true && a == \"😭😂👍😁😘\";"
                              span:
                                line_start: 4
                                line_stop: 4
                                col_start: 30
                                col_stop: 52
                                path: compiler-test
                                content: "    return y == true && a == \"😭😂👍😁😘\";"
                          op: Eq
                          span:
                            line_start: 4
                            line_stop: 4
                            col_start: 25
                            col_stop: 52
                            path: compiler-test
                            content: "    return y == true && a == \"😭😂👍😁😘\";"
                      op: And
                      span:
                        line_start: 4
                        line_stop: 4
                        col_start: 12
                        col_stop: 52
                        path: compiler-test
                        content: "    return y == true && a == \"😭😂👍😁😘\";"
                  span:
                    line_start: 4
                    line_stop: 4
                    col_start: 5
                    col_stop: 52
                    path: compiler-test
                    content: "    return y == true && a == \"😭😂👍😁😘\";"
            span:
              line_start: 3
              line_stop: 5
              col_start: 46
              col_stop: 2
              path: compiler-test
              content: "function main(a: [char; 5], y: bool) -> bool {\n...\n}"
          span:
            line_start: 3
            line_stop: 5
            col_start: 1
            col_stop: 2
            path: compiler-test
            content: "function main(a: [char; 5], y: bool) -> bool {\n...\n}"
    type_inferenced_theorem:
      name: test
      expected_input: []
      imports: []
      circuits: {}
      global_consts: {}
      functions:
        "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: [char; 5], y: bool) -> bool {\\\"}\"}":
          annotations: []
          identifier: "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: [char; 5], y: bool) -> bool {\\\"}\"}"
          input:
            - Variable:
                identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":15,\\\"col_stop\\\":16,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: [char; 5], y: bool) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  Array:
                    - Char
                    - - value: "5"
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 15
                  col_stop: 16
                  path: compiler-test
                  content: "function main(a: [char; 5], y: bool) -> bool {"
            - Variable:
                identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":29,\\\"col_stop\\\":30,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: [char; 5], y: bool) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_: Boolean
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 29
                  col_stop: 30
                  path: compiler-test
                  content: "function main(a: [char; 5], y: bool) -> bool {"
          output: Boolean
          block:
            statements:
              - Return:
                  expression:
                    Binary:
                      left:
                        Binary:
                          left:
                            Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":12,\\\"col_stop\\\":13,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return y == true && a == \\\\\\\"😭😂👍😁😘\\\\\\\";\\\"}\"}"
                          right:
                            Value:
                              Boolean:
                                - "true"
                                - line_start: 4
                                  line_stop: 4
                                  col_start: 17
                                  col_stop: 21
                                  path: compiler-test
                                  content: "    return y == true && a == \"😭😂👍😁😘\";"
                          op: Eq
                          span:
                            line_start: 4
                            line_stop: 4
                            col_start: 12
                            col_stop: 21
                            path: compiler-test
                            content: "    return y == true && a == \"😭😂👍😁😘\";"
                      right:
                        Binary:
                          left:
                            Identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":25,\\\"col_stop\\\":26,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return y == true && a == \\\\\\\"😭😂👍😁😘\\\\\\\";\\\"}\"}"
                          right:
                            ArrayInline:
                              elements:
                                - Expression:
                                    Value:
                                      Char:
                                        character:
                                          Scalar: 128557
                                        span:
                                          line_start: 4
                                          line_stop: 4
                                          col_start: 31
                                          col_stop: 32
                                          path: compiler-test
                                          content: "    return y == true && a == \"😭😂👍😁😘\";"
                                - Expression:
                                    Value:
                                      Char:
                                        character:
                                          Scalar: 128514
                                        span:
                                          line_start: 4
                                          line_stop: 4
                                          col_start: 32
                                          col_stop: 33
                                          path: compiler-test
                                          content: "    return y == true && a == \"😭😂👍😁😘\";"
                                - Expression:
                                    Value:
                                      Char:
                                        character:
                                          Scalar: 128077
                                        span:
                                          line_start: 4
                                          line_stop: 4
                                          col_start: 33
                                          col_stop: 34
                                          path: compiler-test
                                          content: "    return y == true && a == \"😭😂👍😁😘\";"
                                - Expression:
                                    Value:
                                      Char:
                                        character:
                                          Scalar: 128513
                                        span:
                                          line_start: 4
                                          line_stop: 4
                                          col_start: 34
                                          col_stop: 35
                                          path: compiler-test
                                          content: "    return y == true && a == \"😭😂👍😁😘\";"
                                - Expression:
                                    Value:
                                      Char:
                                        character:
                                          Scalar: 128536
                                        span:
                                          line_start: 4
                                          line_stop: 4
                                          col_start: 35
                                          col_stop: 36
                                          path: compiler-test
                                          content: "    return y == true && a == \"😭😂👍😁😘\";"
                              span:
                                line_start: 4
                                line_stop: 4
                                col_start: 30
                                col_stop: 52
                                path: compiler-test
                                content: "    return y == true && a == \"😭😂👍😁😘\";"
                          op: Eq
                          span:
                            line_start: 4
                            line_stop: 4
                            col_start: 25
                            col_stop: 52
                            path: compiler-test
                            content: "    return y == true && a == \"😭😂👍😁😘\";"
                      op: And
                      span:
                        line_start: 4
                        line_stop: 4
                        col_start: 12
                        col_stop: 52
                        path: compiler-test
                        content: "    return y == true && a == \"😭😂👍😁😘\";"
                  span:
                    line_start: 4
                    line_stop: 4
                    col_start: 5
                    col_stop: 52
                    path: compiler-test
                    content: "    return y == true && a == \"😭😂👍😁😘\";"
            span:
              line_start: 3
              line_stop: 5
              col_start: 46
              col_stop: 2
              path: compiler-test
              content: "function main(a: [char; 5], y: bool) -> bool {\n...\n}"
          span:
            line_start: 3
            line_stop: 5
            col_start: 1
            col_stop: 2
            path: compiler-test
            content: "function main(a: [char; 5], y: bool) -> bool {\n...\n}"
