---
namespace: Compile
expectation: Pass
outputs:
  - circuit:
      num_public_variables: 0
      num_private_variables: 31
      num_constraints: 31
      at: 9dbf37472d7a01111bf49d73870895e1669fce2d7c86d19fa1cd9bf97102c34a
      bt: 51c5020146972aaa76ab053686ae5364f63ce6185620eba3780cf86581f29cfe
      ct: e02be0defc1d4e9bfd935093780a8693b624228f7dc2501ac1f065af2eee9bc8
    output:
      - input_file: input/main_array.in
        output:
          registers:
            r0:
              type: bool
              value: "true"
    initial_theorem:
      name: ""
      expected_input: []
      imports: []
      circuits: {}
      global_consts: {}
      functions:
        "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(x: [i16; 1]) -> bool{\\\"}\"}":
          annotations: []
          identifier: "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(x: [i16; 1]) -> bool{\\\"}\"}"
          input:
            - Variable:
                identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":15,\\\"col_stop\\\":16,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(x: [i16; 1]) -> bool{\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  Array:
                    - IntegerType: I16
                    - - value: "1"
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 15
                  col_stop: 16
                  path: compiler-test
                  content: "function main(x: [i16; 1]) -> bool{"
          output: Boolean
          block:
            statements:
              - Return:
                  expression:
                    Binary:
                      left:
                        ArrayAccess:
                          array:
                            Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":12,\\\"col_stop\\\":13,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return x[0] == 0;\\\"}\"}"
                          index:
                            Value:
                              Implicit:
                                - "0"
                                - line_start: 4
                                  line_stop: 4
                                  col_start: 14
                                  col_stop: 15
                                  path: compiler-test
                                  content: "    return x[0] == 0;"
                          span:
                            line_start: 4
                            line_stop: 4
                            col_start: 12
                            col_stop: 16
                            path: compiler-test
                            content: "    return x[0] == 0;"
                      right:
                        Value:
                          Implicit:
                            - "0"
                            - line_start: 4
                              line_stop: 4
                              col_start: 20
                              col_stop: 21
                              path: compiler-test
                              content: "    return x[0] == 0;"
                      op: Eq
                      span:
                        line_start: 4
                        line_stop: 4
                        col_start: 12
                        col_stop: 21
                        path: compiler-test
                        content: "    return x[0] == 0;"
                  span:
                    line_start: 4
                    line_stop: 4
                    col_start: 5
                    col_stop: 21
                    path: compiler-test
                    content: "    return x[0] == 0;"
            span:
              line_start: 3
              line_stop: 5
              col_start: 35
              col_stop: 2
              path: compiler-test
              content: "function main(x: [i16; 1]) -> bool{\n...\n}"
          span:
            line_start: 3
            line_stop: 5
            col_start: 1
            col_stop: 2
            path: compiler-test
            content: "function main(x: [i16; 1]) -> bool{\n...\n}"
    canonicalized_theorem:
      name: ""
      expected_input: []
      imports: []
      circuits: {}
      global_consts: {}
      functions:
        "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(x: [i16; 1]) -> bool{\\\"}\"}":
          annotations: []
          identifier: "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(x: [i16; 1]) -> bool{\\\"}\"}"
          input:
            - Variable:
                identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":15,\\\"col_stop\\\":16,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(x: [i16; 1]) -> bool{\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  Array:
                    - IntegerType: I16
                    - - value: "1"
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 15
                  col_stop: 16
                  path: compiler-test
                  content: "function main(x: [i16; 1]) -> bool{"
          output: Boolean
          block:
            statements:
              - Return:
                  expression:
                    Binary:
                      left:
                        ArrayAccess:
                          array:
                            Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":12,\\\"col_stop\\\":13,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return x[0] == 0;\\\"}\"}"
                          index:
                            Value:
                              Implicit:
                                - "0"
                                - line_start: 4
                                  line_stop: 4
                                  col_start: 14
                                  col_stop: 15
                                  path: compiler-test
                                  content: "    return x[0] == 0;"
                          span:
                            line_start: 4
                            line_stop: 4
                            col_start: 12
                            col_stop: 16
                            path: compiler-test
                            content: "    return x[0] == 0;"
                      right:
                        Value:
                          Implicit:
                            - "0"
                            - line_start: 4
                              line_stop: 4
                              col_start: 20
                              col_stop: 21
                              path: compiler-test
                              content: "    return x[0] == 0;"
                      op: Eq
                      span:
                        line_start: 4
                        line_stop: 4
                        col_start: 12
                        col_stop: 21
                        path: compiler-test
                        content: "    return x[0] == 0;"
                  span:
                    line_start: 4
                    line_stop: 4
                    col_start: 5
                    col_stop: 21
                    path: compiler-test
                    content: "    return x[0] == 0;"
            span:
              line_start: 3
              line_stop: 5
              col_start: 35
              col_stop: 2
              path: compiler-test
              content: "function main(x: [i16; 1]) -> bool{\n...\n}"
          span:
            line_start: 3
            line_stop: 5
            col_start: 1
            col_stop: 2
            path: compiler-test
            content: "function main(x: [i16; 1]) -> bool{\n...\n}"
    type_inferenced_theorem:
      name: test
      expected_input: []
      imports: []
      circuits: {}
      global_consts: {}
      functions:
        "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(x: [i16; 1]) -> bool{\\\"}\"}":
          annotations: []
          identifier: "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(x: [i16; 1]) -> bool{\\\"}\"}"
          input:
            - Variable:
                identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":15,\\\"col_stop\\\":16,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(x: [i16; 1]) -> bool{\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  Array:
                    - IntegerType: I16
                    - - value: "1"
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 15
                  col_stop: 16
                  path: compiler-test
                  content: "function main(x: [i16; 1]) -> bool{"
          output: Boolean
          block:
            statements:
              - Return:
                  expression:
                    Binary:
                      left:
                        ArrayAccess:
                          array:
                            Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":12,\\\"col_stop\\\":13,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return x[0] == 0;\\\"}\"}"
                          index:
                            Value:
                              Integer:
                                - U32
                                - "0"
                                - line_start: 4
                                  line_stop: 4
                                  col_start: 14
                                  col_stop: 15
                                  path: compiler-test
                                  content: "    return x[0] == 0;"
                          span:
                            line_start: 4
                            line_stop: 4
                            col_start: 12
                            col_stop: 16
                            path: compiler-test
                            content: "    return x[0] == 0;"
                      right:
                        Value:
                          Integer:
                            - I16
                            - "0"
                            - line_start: 4
                              line_stop: 4
                              col_start: 20
                              col_stop: 21
                              path: compiler-test
                              content: "    return x[0] == 0;"
                      op: Eq
                      span:
                        line_start: 4
                        line_stop: 4
                        col_start: 12
                        col_stop: 21
                        path: compiler-test
                        content: "    return x[0] == 0;"
                  span:
                    line_start: 4
                    line_stop: 4
                    col_start: 5
                    col_stop: 21
                    path: compiler-test
                    content: "    return x[0] == 0;"
            span:
              line_start: 3
              line_stop: 5
              col_start: 35
              col_stop: 2
              path: compiler-test
              content: "function main(x: [i16; 1]) -> bool{\n...\n}"
          span:
            line_start: 3
            line_stop: 5
            col_start: 1
            col_stop: 2
            path: compiler-test
            content: "function main(x: [i16; 1]) -> bool{\n...\n}"
