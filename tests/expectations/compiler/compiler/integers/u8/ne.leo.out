---
namespace: Compile
expectation: Pass
outputs:
  - circuit:
      num_public_variables: 0
      num_private_variables: 33
      num_constraints: 33
      at: 5e88cd940df2c48a53e64a9b8589045ef766371daa5cc885df982902d9fcc754
      bt: 10b52342f8c44eb9b3335b4df9ca4136de3ad35d5b580b2ab32ae5e10bcdf3b4
      ct: 2aae7d6631260dcaafbfe9709ade84e75f5172a9baad48e108e7264d5fc17cf6
    output:
      - input_file: ne.in
        output:
          registers:
            r0:
              type: bool
              value: "true"
    initial_theorem:
      name: ""
      expected_input: []
      imports: []
      circuits: {}
      global_consts: {}
      functions:
        "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: u8, b: u8, c: bool) -> bool {\\\"}\"}":
          annotations: []
          identifier: "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: u8, b: u8, c: bool) -> bool {\\\"}\"}"
          input:
            - Variable:
                identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":15,\\\"col_stop\\\":16,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: u8, b: u8, c: bool) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: U8
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 15
                  col_stop: 16
                  path: compiler-test
                  content: "function main(a: u8, b: u8, c: bool) -> bool {"
            - Variable:
                identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":22,\\\"col_stop\\\":23,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: u8, b: u8, c: bool) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: U8
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 22
                  col_stop: 23
                  path: compiler-test
                  content: "function main(a: u8, b: u8, c: bool) -> bool {"
            - Variable:
                identifier: "{\"name\":\"c\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":29,\\\"col_stop\\\":30,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: u8, b: u8, c: bool) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_: Boolean
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 29
                  col_stop: 30
                  path: compiler-test
                  content: "function main(a: u8, b: u8, c: bool) -> bool {"
          output: Boolean
          block:
            statements:
              - Return:
                  expression:
                    Binary:
                      left:
                        Binary:
                          left:
                            Identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":12,\\\"col_stop\\\":13,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return a != b == c;\\\"}\"}"
                          right:
                            Identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":17,\\\"col_stop\\\":18,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return a != b == c;\\\"}\"}"
                          op: Ne
                          span:
                            line_start: 4
                            line_stop: 4
                            col_start: 12
                            col_stop: 18
                            path: compiler-test
                            content: "    return a != b == c;"
                      right:
                        Identifier: "{\"name\":\"c\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":22,\\\"col_stop\\\":23,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return a != b == c;\\\"}\"}"
                      op: Eq
                      span:
                        line_start: 4
                        line_stop: 4
                        col_start: 12
                        col_stop: 23
                        path: compiler-test
                        content: "    return a != b == c;"
                  span:
                    line_start: 4
                    line_stop: 4
                    col_start: 5
                    col_stop: 23
                    path: compiler-test
                    content: "    return a != b == c;"
            span:
              line_start: 3
              line_stop: 5
              col_start: 46
              col_stop: 2
              path: compiler-test
              content: "function main(a: u8, b: u8, c: bool) -> bool {\n...\n}"
          span:
            line_start: 3
            line_stop: 5
            col_start: 1
            col_stop: 2
            path: compiler-test
            content: "function main(a: u8, b: u8, c: bool) -> bool {\n...\n}"
    canonicalized_theorem:
      name: ""
      expected_input: []
      imports: []
      circuits: {}
      global_consts: {}
      functions:
        "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: u8, b: u8, c: bool) -> bool {\\\"}\"}":
          annotations: []
          identifier: "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: u8, b: u8, c: bool) -> bool {\\\"}\"}"
          input:
            - Variable:
                identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":15,\\\"col_stop\\\":16,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: u8, b: u8, c: bool) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: U8
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 15
                  col_stop: 16
                  path: compiler-test
                  content: "function main(a: u8, b: u8, c: bool) -> bool {"
            - Variable:
                identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":22,\\\"col_stop\\\":23,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: u8, b: u8, c: bool) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: U8
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 22
                  col_stop: 23
                  path: compiler-test
                  content: "function main(a: u8, b: u8, c: bool) -> bool {"
            - Variable:
                identifier: "{\"name\":\"c\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":29,\\\"col_stop\\\":30,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: u8, b: u8, c: bool) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_: Boolean
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 29
                  col_stop: 30
                  path: compiler-test
                  content: "function main(a: u8, b: u8, c: bool) -> bool {"
          output: Boolean
          block:
            statements:
              - Return:
                  expression:
                    Binary:
                      left:
                        Binary:
                          left:
                            Identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":12,\\\"col_stop\\\":13,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return a != b == c;\\\"}\"}"
                          right:
                            Identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":17,\\\"col_stop\\\":18,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return a != b == c;\\\"}\"}"
                          op: Ne
                          span:
                            line_start: 4
                            line_stop: 4
                            col_start: 12
                            col_stop: 18
                            path: compiler-test
                            content: "    return a != b == c;"
                      right:
                        Identifier: "{\"name\":\"c\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":22,\\\"col_stop\\\":23,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return a != b == c;\\\"}\"}"
                      op: Eq
                      span:
                        line_start: 4
                        line_stop: 4
                        col_start: 12
                        col_stop: 23
                        path: compiler-test
                        content: "    return a != b == c;"
                  span:
                    line_start: 4
                    line_stop: 4
                    col_start: 5
                    col_stop: 23
                    path: compiler-test
                    content: "    return a != b == c;"
            span:
              line_start: 3
              line_stop: 5
              col_start: 46
              col_stop: 2
              path: compiler-test
              content: "function main(a: u8, b: u8, c: bool) -> bool {\n...\n}"
          span:
            line_start: 3
            line_stop: 5
            col_start: 1
            col_stop: 2
            path: compiler-test
            content: "function main(a: u8, b: u8, c: bool) -> bool {\n...\n}"
    type_inferenced_theorem:
      name: test
      expected_input: []
      imports: []
      circuits: {}
      global_consts: {}
      functions:
        "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: u8, b: u8, c: bool) -> bool {\\\"}\"}":
          annotations: []
          identifier: "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: u8, b: u8, c: bool) -> bool {\\\"}\"}"
          input:
            - Variable:
                identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":15,\\\"col_stop\\\":16,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: u8, b: u8, c: bool) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: U8
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 15
                  col_stop: 16
                  path: compiler-test
                  content: "function main(a: u8, b: u8, c: bool) -> bool {"
            - Variable:
                identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":22,\\\"col_stop\\\":23,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: u8, b: u8, c: bool) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: U8
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 22
                  col_stop: 23
                  path: compiler-test
                  content: "function main(a: u8, b: u8, c: bool) -> bool {"
            - Variable:
                identifier: "{\"name\":\"c\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":29,\\\"col_stop\\\":30,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: u8, b: u8, c: bool) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_: Boolean
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 29
                  col_stop: 30
                  path: compiler-test
                  content: "function main(a: u8, b: u8, c: bool) -> bool {"
          output: Boolean
          block:
            statements:
              - Return:
                  expression:
                    Binary:
                      left:
                        Binary:
                          left:
                            Identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":12,\\\"col_stop\\\":13,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return a != b == c;\\\"}\"}"
                          right:
                            Identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":17,\\\"col_stop\\\":18,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return a != b == c;\\\"}\"}"
                          op: Ne
                          span:
                            line_start: 4
                            line_stop: 4
                            col_start: 12
                            col_stop: 18
                            path: compiler-test
                            content: "    return a != b == c;"
                      right:
                        Identifier: "{\"name\":\"c\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":22,\\\"col_stop\\\":23,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return a != b == c;\\\"}\"}"
                      op: Eq
                      span:
                        line_start: 4
                        line_stop: 4
                        col_start: 12
                        col_stop: 23
                        path: compiler-test
                        content: "    return a != b == c;"
                  span:
                    line_start: 4
                    line_stop: 4
                    col_start: 5
                    col_stop: 23
                    path: compiler-test
                    content: "    return a != b == c;"
            span:
              line_start: 3
              line_stop: 5
              col_start: 46
              col_stop: 2
              path: compiler-test
              content: "function main(a: u8, b: u8, c: bool) -> bool {\n...\n}"
          span:
            line_start: 3
            line_stop: 5
            col_start: 1
            col_stop: 2
            path: compiler-test
            content: "function main(a: u8, b: u8, c: bool) -> bool {\n...\n}"
