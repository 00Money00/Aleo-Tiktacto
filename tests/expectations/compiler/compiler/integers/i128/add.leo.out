---
namespace: Compile
expectation: Pass
outputs:
  - circuit:
      num_public_variables: 0
      num_private_variables: 1404
      num_constraints: 1405
      at: b738445f9fa8039b6d93543917f21faebabd70ce5f0fc95bc2b82f9a96653e78
      bt: 7d12a27b02e7c965ac1775f6711d6da181ea2a809f8bf644ab1755929013f7e4
      ct: e7b4e2f5a4e98c3a9016990ee3dd9bbf5e55e7a98e1dc3ac7d4b458ecdcdde7e
    output:
      - input_file: i128.in
        output:
          registers:
            r0:
              type: bool
              value: "true"
    initial_theorem:
      name: ""
      expected_input: []
      imports: []
      circuits: {}
      global_consts: {}
      functions:
        "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: i128, b: i128, c: i128) -> bool {\\\"}\"}":
          annotations: []
          identifier: "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: i128, b: i128, c: i128) -> bool {\\\"}\"}"
          input:
            - Variable:
                identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":15,\\\"col_stop\\\":16,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: i128, b: i128, c: i128) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: I128
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 15
                  col_stop: 16
                  path: compiler-test
                  content: "function main(a: i128, b: i128, c: i128) -> bool {"
            - Variable:
                identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":24,\\\"col_stop\\\":25,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: i128, b: i128, c: i128) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: I128
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 24
                  col_stop: 25
                  path: compiler-test
                  content: "function main(a: i128, b: i128, c: i128) -> bool {"
            - Variable:
                identifier: "{\"name\":\"c\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":33,\\\"col_stop\\\":34,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: i128, b: i128, c: i128) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: I128
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 33
                  col_stop: 34
                  path: compiler-test
                  content: "function main(a: i128, b: i128, c: i128) -> bool {"
          output: Boolean
          block:
            statements:
              - Return:
                  expression:
                    Binary:
                      left:
                        Binary:
                          left:
                            Identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":12,\\\"col_stop\\\":13,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return a + b == c;\\\"}\"}"
                          right:
                            Identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":16,\\\"col_stop\\\":17,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return a + b == c;\\\"}\"}"
                          op: Add
                          span:
                            line_start: 4
                            line_stop: 4
                            col_start: 12
                            col_stop: 17
                            path: compiler-test
                            content: "    return a + b == c;"
                      right:
                        Identifier: "{\"name\":\"c\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":21,\\\"col_stop\\\":22,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return a + b == c;\\\"}\"}"
                      op: Eq
                      span:
                        line_start: 4
                        line_stop: 4
                        col_start: 12
                        col_stop: 22
                        path: compiler-test
                        content: "    return a + b == c;"
                  span:
                    line_start: 4
                    line_stop: 4
                    col_start: 5
                    col_stop: 22
                    path: compiler-test
                    content: "    return a + b == c;"
            span:
              line_start: 3
              line_stop: 5
              col_start: 50
              col_stop: 2
              path: compiler-test
              content: "function main(a: i128, b: i128, c: i128) -> bool {\n...\n}"
          span:
            line_start: 3
            line_stop: 5
            col_start: 1
            col_stop: 2
            path: compiler-test
            content: "function main(a: i128, b: i128, c: i128) -> bool {\n...\n}"
    canonicalized_theorem:
      name: ""
      expected_input: []
      imports: []
      circuits: {}
      global_consts: {}
      functions:
        "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: i128, b: i128, c: i128) -> bool {\\\"}\"}":
          annotations: []
          identifier: "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: i128, b: i128, c: i128) -> bool {\\\"}\"}"
          input:
            - Variable:
                identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":15,\\\"col_stop\\\":16,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: i128, b: i128, c: i128) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: I128
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 15
                  col_stop: 16
                  path: compiler-test
                  content: "function main(a: i128, b: i128, c: i128) -> bool {"
            - Variable:
                identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":24,\\\"col_stop\\\":25,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: i128, b: i128, c: i128) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: I128
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 24
                  col_stop: 25
                  path: compiler-test
                  content: "function main(a: i128, b: i128, c: i128) -> bool {"
            - Variable:
                identifier: "{\"name\":\"c\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":33,\\\"col_stop\\\":34,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: i128, b: i128, c: i128) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: I128
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 33
                  col_stop: 34
                  path: compiler-test
                  content: "function main(a: i128, b: i128, c: i128) -> bool {"
          output: Boolean
          block:
            statements:
              - Return:
                  expression:
                    Binary:
                      left:
                        Binary:
                          left:
                            Identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":12,\\\"col_stop\\\":13,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return a + b == c;\\\"}\"}"
                          right:
                            Identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":16,\\\"col_stop\\\":17,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return a + b == c;\\\"}\"}"
                          op: Add
                          span:
                            line_start: 4
                            line_stop: 4
                            col_start: 12
                            col_stop: 17
                            path: compiler-test
                            content: "    return a + b == c;"
                      right:
                        Identifier: "{\"name\":\"c\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":21,\\\"col_stop\\\":22,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return a + b == c;\\\"}\"}"
                      op: Eq
                      span:
                        line_start: 4
                        line_stop: 4
                        col_start: 12
                        col_stop: 22
                        path: compiler-test
                        content: "    return a + b == c;"
                  span:
                    line_start: 4
                    line_stop: 4
                    col_start: 5
                    col_stop: 22
                    path: compiler-test
                    content: "    return a + b == c;"
            span:
              line_start: 3
              line_stop: 5
              col_start: 50
              col_stop: 2
              path: compiler-test
              content: "function main(a: i128, b: i128, c: i128) -> bool {\n...\n}"
          span:
            line_start: 3
            line_stop: 5
            col_start: 1
            col_stop: 2
            path: compiler-test
            content: "function main(a: i128, b: i128, c: i128) -> bool {\n...\n}"
    type_inferenced_theorem:
      name: test
      expected_input: []
      imports: []
      circuits: {}
      global_consts: {}
      functions:
        "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: i128, b: i128, c: i128) -> bool {\\\"}\"}":
          annotations: []
          identifier: "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: i128, b: i128, c: i128) -> bool {\\\"}\"}"
          input:
            - Variable:
                identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":15,\\\"col_stop\\\":16,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: i128, b: i128, c: i128) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: I128
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 15
                  col_stop: 16
                  path: compiler-test
                  content: "function main(a: i128, b: i128, c: i128) -> bool {"
            - Variable:
                identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":24,\\\"col_stop\\\":25,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: i128, b: i128, c: i128) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: I128
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 24
                  col_stop: 25
                  path: compiler-test
                  content: "function main(a: i128, b: i128, c: i128) -> bool {"
            - Variable:
                identifier: "{\"name\":\"c\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":33,\\\"col_stop\\\":34,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: i128, b: i128, c: i128) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: I128
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 33
                  col_stop: 34
                  path: compiler-test
                  content: "function main(a: i128, b: i128, c: i128) -> bool {"
          output: Boolean
          block:
            statements:
              - Return:
                  expression:
                    Binary:
                      left:
                        Binary:
                          left:
                            Identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":12,\\\"col_stop\\\":13,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return a + b == c;\\\"}\"}"
                          right:
                            Identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":16,\\\"col_stop\\\":17,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return a + b == c;\\\"}\"}"
                          op: Add
                          span:
                            line_start: 4
                            line_stop: 4
                            col_start: 12
                            col_stop: 17
                            path: compiler-test
                            content: "    return a + b == c;"
                      right:
                        Identifier: "{\"name\":\"c\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":21,\\\"col_stop\\\":22,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return a + b == c;\\\"}\"}"
                      op: Eq
                      span:
                        line_start: 4
                        line_stop: 4
                        col_start: 12
                        col_stop: 22
                        path: compiler-test
                        content: "    return a + b == c;"
                  span:
                    line_start: 4
                    line_stop: 4
                    col_start: 5
                    col_stop: 22
                    path: compiler-test
                    content: "    return a + b == c;"
            span:
              line_start: 3
              line_stop: 5
              col_start: 50
              col_stop: 2
              path: compiler-test
              content: "function main(a: i128, b: i128, c: i128) -> bool {\n...\n}"
          span:
            line_start: 3
            line_stop: 5
            col_start: 1
            col_stop: 2
            path: compiler-test
            content: "function main(a: i128, b: i128, c: i128) -> bool {\n...\n}"
