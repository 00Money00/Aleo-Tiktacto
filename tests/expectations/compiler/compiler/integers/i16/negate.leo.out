---
namespace: Compile
expectation: Pass
outputs:
  - circuit:
      num_public_variables: 0
      num_private_variables: 93
      num_constraints: 93
      at: 29988ea86584610f4511315204ed49c45d0303c44e0fb59c0df19dc048cee369
      bt: 9bba1722080b8c396e72a645c5ca7dff2943c0b29a741569acdba3887e40c8af
      ct: 4f89ea4838bc4544e2767b7dc68a1e0fa0649d7401bb7ae8292bd6aa654eda28
    output:
      - input_file: i16.in
        output:
          registers:
            r0:
              type: bool
              value: "true"
      - input_file: i16.in
        output:
          registers:
            r0:
              type: bool
              value: "true"
    initial_theorem:
      name: ""
      expected_input: []
      imports: []
      circuits: {}
      global_consts: {}
      functions:
        "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: i16, b: i16) -> bool {\\\"}\"}":
          annotations: []
          identifier: "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: i16, b: i16) -> bool {\\\"}\"}"
          input:
            - Variable:
                identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":15,\\\"col_stop\\\":16,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: i16, b: i16) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: I16
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 15
                  col_stop: 16
                  path: compiler-test
                  content: "function main(a: i16, b: i16) -> bool {"
            - Variable:
                identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":23,\\\"col_stop\\\":24,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: i16, b: i16) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: I16
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 23
                  col_stop: 24
                  path: compiler-test
                  content: "function main(a: i16, b: i16) -> bool {"
          output: Boolean
          block:
            statements:
              - Return:
                  expression:
                    Binary:
                      left:
                        Unary:
                          inner:
                            Identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":13,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return -a == b;\\\"}\"}"
                          op: Negate
                          span:
                            line_start: 4
                            line_stop: 4
                            col_start: 12
                            col_stop: 14
                            path: compiler-test
                            content: "    return -a == b;"
                      right:
                        Identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":18,\\\"col_stop\\\":19,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return -a == b;\\\"}\"}"
                      op: Eq
                      span:
                        line_start: 4
                        line_stop: 4
                        col_start: 12
                        col_stop: 19
                        path: compiler-test
                        content: "    return -a == b;"
                  span:
                    line_start: 4
                    line_stop: 4
                    col_start: 5
                    col_stop: 19
                    path: compiler-test
                    content: "    return -a == b;"
            span:
              line_start: 3
              line_stop: 5
              col_start: 39
              col_stop: 2
              path: compiler-test
              content: "function main(a: i16, b: i16) -> bool {\n...\n}"
          span:
            line_start: 3
            line_stop: 5
            col_start: 1
            col_stop: 2
            path: compiler-test
            content: "function main(a: i16, b: i16) -> bool {\n...\n}"
    canonicalized_theorem:
      name: ""
      expected_input: []
      imports: []
      circuits: {}
      global_consts: {}
      functions:
        "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: i16, b: i16) -> bool {\\\"}\"}":
          annotations: []
          identifier: "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: i16, b: i16) -> bool {\\\"}\"}"
          input:
            - Variable:
                identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":15,\\\"col_stop\\\":16,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: i16, b: i16) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: I16
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 15
                  col_stop: 16
                  path: compiler-test
                  content: "function main(a: i16, b: i16) -> bool {"
            - Variable:
                identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":23,\\\"col_stop\\\":24,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: i16, b: i16) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: I16
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 23
                  col_stop: 24
                  path: compiler-test
                  content: "function main(a: i16, b: i16) -> bool {"
          output: Boolean
          block:
            statements:
              - Return:
                  expression:
                    Binary:
                      left:
                        Unary:
                          inner:
                            Identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":13,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return -a == b;\\\"}\"}"
                          op: Negate
                          span:
                            line_start: 4
                            line_stop: 4
                            col_start: 12
                            col_stop: 14
                            path: compiler-test
                            content: "    return -a == b;"
                      right:
                        Identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":18,\\\"col_stop\\\":19,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return -a == b;\\\"}\"}"
                      op: Eq
                      span:
                        line_start: 4
                        line_stop: 4
                        col_start: 12
                        col_stop: 19
                        path: compiler-test
                        content: "    return -a == b;"
                  span:
                    line_start: 4
                    line_stop: 4
                    col_start: 5
                    col_stop: 19
                    path: compiler-test
                    content: "    return -a == b;"
            span:
              line_start: 3
              line_stop: 5
              col_start: 39
              col_stop: 2
              path: compiler-test
              content: "function main(a: i16, b: i16) -> bool {\n...\n}"
          span:
            line_start: 3
            line_stop: 5
            col_start: 1
            col_stop: 2
            path: compiler-test
            content: "function main(a: i16, b: i16) -> bool {\n...\n}"
    type_inferenced_theorem:
      name: test
      expected_input: []
      imports: []
      circuits: {}
      global_consts: {}
      functions:
        "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: i16, b: i16) -> bool {\\\"}\"}":
          annotations: []
          identifier: "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: i16, b: i16) -> bool {\\\"}\"}"
          input:
            - Variable:
                identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":15,\\\"col_stop\\\":16,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: i16, b: i16) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: I16
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 15
                  col_stop: 16
                  path: compiler-test
                  content: "function main(a: i16, b: i16) -> bool {"
            - Variable:
                identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":23,\\\"col_stop\\\":24,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: i16, b: i16) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: I16
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 23
                  col_stop: 24
                  path: compiler-test
                  content: "function main(a: i16, b: i16) -> bool {"
          output: Boolean
          block:
            statements:
              - Return:
                  expression:
                    Binary:
                      left:
                        Unary:
                          inner:
                            Identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":13,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return -a == b;\\\"}\"}"
                          op: Negate
                          span:
                            line_start: 4
                            line_stop: 4
                            col_start: 12
                            col_stop: 14
                            path: compiler-test
                            content: "    return -a == b;"
                      right:
                        Identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":18,\\\"col_stop\\\":19,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return -a == b;\\\"}\"}"
                      op: Eq
                      span:
                        line_start: 4
                        line_stop: 4
                        col_start: 12
                        col_stop: 19
                        path: compiler-test
                        content: "    return -a == b;"
                  span:
                    line_start: 4
                    line_stop: 4
                    col_start: 5
                    col_stop: 19
                    path: compiler-test
                    content: "    return -a == b;"
            span:
              line_start: 3
              line_stop: 5
              col_start: 39
              col_stop: 2
              path: compiler-test
              content: "function main(a: i16, b: i16) -> bool {\n...\n}"
          span:
            line_start: 3
            line_stop: 5
            col_start: 1
            col_stop: 2
            path: compiler-test
            content: "function main(a: i16, b: i16) -> bool {\n...\n}"
