---
namespace: Compile
expectation: Pass
outputs:
  - circuit:
      num_public_variables: 0
      num_private_variables: 224
      num_constraints: 256
      at: 45301188494f0c65b2e88eac9117ba7367e772ea34e9b8f34bf3d49dbd1dd067
      bt: 35d9c47cfd4fc137760d0ee411c0b097541cab7aae2b0a9ea83b368328fe5c23
      ct: 032da4c7df957d9ca89b5395be6e1c84cab7d19a78abe1b02bb37b26ca65b0e4
    output:
      - input_file: u32_t.in
        output:
          registers:
            r0:
              type: bool
              value: "true"
      - input_file: u32_f.in
        output:
          registers:
            r0:
              type: bool
              value: "true"
    initial_theorem:
      name: ""
      expected_input: []
      imports: []
      circuits: {}
      global_consts: {}
      functions:
        "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(s: bool, a: u32, b: u32, c: u32) -> bool {\\\"}\"}":
          annotations: []
          identifier: "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(s: bool, a: u32, b: u32, c: u32) -> bool {\\\"}\"}"
          input:
            - Variable:
                identifier: "{\"name\":\"s\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":15,\\\"col_stop\\\":16,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(s: bool, a: u32, b: u32, c: u32) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_: Boolean
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 15
                  col_stop: 16
                  path: compiler-test
                  content: "function main(s: bool, a: u32, b: u32, c: u32) -> bool {"
            - Variable:
                identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":24,\\\"col_stop\\\":25,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(s: bool, a: u32, b: u32, c: u32) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: U32
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 24
                  col_stop: 25
                  path: compiler-test
                  content: "function main(s: bool, a: u32, b: u32, c: u32) -> bool {"
            - Variable:
                identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":32,\\\"col_stop\\\":33,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(s: bool, a: u32, b: u32, c: u32) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: U32
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 32
                  col_stop: 33
                  path: compiler-test
                  content: "function main(s: bool, a: u32, b: u32, c: u32) -> bool {"
            - Variable:
                identifier: "{\"name\":\"c\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":40,\\\"col_stop\\\":41,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(s: bool, a: u32, b: u32, c: u32) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: U32
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 40
                  col_stop: 41
                  path: compiler-test
                  content: "function main(s: bool, a: u32, b: u32, c: u32) -> bool {"
          output: Boolean
          block:
            statements:
              - Definition:
                  declaration_type: Let
                  variable_names:
                    - mutable: true
                      identifier: "{\"name\":\"r\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":9,\\\"col_stop\\\":10,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    let r = s ? a : b;\\\"}\"}"
                      span:
                        line_start: 4
                        line_stop: 4
                        col_start: 9
                        col_stop: 10
                        path: compiler-test
                        content: "    let r = s ? a : b;"
                  type_: ~
                  value:
                    Ternary:
                      condition:
                        Identifier: "{\"name\":\"s\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":13,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    let r = s ? a : b;\\\"}\"}"
                      if_true:
                        Identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":17,\\\"col_stop\\\":18,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    let r = s ? a : b;\\\"}\"}"
                      if_false:
                        Identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":21,\\\"col_stop\\\":22,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    let r = s ? a : b;\\\"}\"}"
                      span:
                        line_start: 4
                        line_stop: 4
                        col_start: 13
                        col_stop: 22
                        path: compiler-test
                        content: "    let r = s ? a : b;"
                  span:
                    line_start: 4
                    line_stop: 4
                    col_start: 5
                    col_stop: 22
                    path: compiler-test
                    content: "    let r = s ? a : b;"
              - Return:
                  expression:
                    Binary:
                      left:
                        Identifier: "{\"name\":\"r\",\"span\":\"{\\\"line_start\\\":6,\\\"line_stop\\\":6,\\\"col_start\\\":12,\\\"col_stop\\\":13,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return r == c;\\\"}\"}"
                      right:
                        Identifier: "{\"name\":\"c\",\"span\":\"{\\\"line_start\\\":6,\\\"line_stop\\\":6,\\\"col_start\\\":17,\\\"col_stop\\\":18,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return r == c;\\\"}\"}"
                      op: Eq
                      span:
                        line_start: 6
                        line_stop: 6
                        col_start: 12
                        col_stop: 18
                        path: compiler-test
                        content: "    return r == c;"
                  span:
                    line_start: 6
                    line_stop: 6
                    col_start: 5
                    col_stop: 18
                    path: compiler-test
                    content: "    return r == c;"
            span:
              line_start: 3
              line_stop: 7
              col_start: 56
              col_stop: 2
              path: compiler-test
              content: "function main(s: bool, a: u32, b: u32, c: u32) -> bool {\n...\n}"
          span:
            line_start: 3
            line_stop: 7
            col_start: 1
            col_stop: 2
            path: compiler-test
            content: "function main(s: bool, a: u32, b: u32, c: u32) -> bool {\n...\n}\n\n"
    canonicalized_theorem:
      name: ""
      expected_input: []
      imports: []
      circuits: {}
      global_consts: {}
      functions:
        "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(s: bool, a: u32, b: u32, c: u32) -> bool {\\\"}\"}":
          annotations: []
          identifier: "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(s: bool, a: u32, b: u32, c: u32) -> bool {\\\"}\"}"
          input:
            - Variable:
                identifier: "{\"name\":\"s\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":15,\\\"col_stop\\\":16,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(s: bool, a: u32, b: u32, c: u32) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_: Boolean
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 15
                  col_stop: 16
                  path: compiler-test
                  content: "function main(s: bool, a: u32, b: u32, c: u32) -> bool {"
            - Variable:
                identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":24,\\\"col_stop\\\":25,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(s: bool, a: u32, b: u32, c: u32) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: U32
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 24
                  col_stop: 25
                  path: compiler-test
                  content: "function main(s: bool, a: u32, b: u32, c: u32) -> bool {"
            - Variable:
                identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":32,\\\"col_stop\\\":33,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(s: bool, a: u32, b: u32, c: u32) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: U32
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 32
                  col_stop: 33
                  path: compiler-test
                  content: "function main(s: bool, a: u32, b: u32, c: u32) -> bool {"
            - Variable:
                identifier: "{\"name\":\"c\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":40,\\\"col_stop\\\":41,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(s: bool, a: u32, b: u32, c: u32) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: U32
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 40
                  col_stop: 41
                  path: compiler-test
                  content: "function main(s: bool, a: u32, b: u32, c: u32) -> bool {"
          output: Boolean
          block:
            statements:
              - Definition:
                  declaration_type: Let
                  variable_names:
                    - mutable: true
                      identifier: "{\"name\":\"r\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":9,\\\"col_stop\\\":10,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    let r = s ? a : b;\\\"}\"}"
                      span:
                        line_start: 4
                        line_stop: 4
                        col_start: 9
                        col_stop: 10
                        path: compiler-test
                        content: "    let r = s ? a : b;"
                  type_: ~
                  value:
                    Ternary:
                      condition:
                        Identifier: "{\"name\":\"s\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":13,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    let r = s ? a : b;\\\"}\"}"
                      if_true:
                        Identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":17,\\\"col_stop\\\":18,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    let r = s ? a : b;\\\"}\"}"
                      if_false:
                        Identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":21,\\\"col_stop\\\":22,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    let r = s ? a : b;\\\"}\"}"
                      span:
                        line_start: 4
                        line_stop: 4
                        col_start: 13
                        col_stop: 22
                        path: compiler-test
                        content: "    let r = s ? a : b;"
                  span:
                    line_start: 4
                    line_stop: 4
                    col_start: 5
                    col_stop: 22
                    path: compiler-test
                    content: "    let r = s ? a : b;"
              - Return:
                  expression:
                    Binary:
                      left:
                        Identifier: "{\"name\":\"r\",\"span\":\"{\\\"line_start\\\":6,\\\"line_stop\\\":6,\\\"col_start\\\":12,\\\"col_stop\\\":13,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return r == c;\\\"}\"}"
                      right:
                        Identifier: "{\"name\":\"c\",\"span\":\"{\\\"line_start\\\":6,\\\"line_stop\\\":6,\\\"col_start\\\":17,\\\"col_stop\\\":18,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return r == c;\\\"}\"}"
                      op: Eq
                      span:
                        line_start: 6
                        line_stop: 6
                        col_start: 12
                        col_stop: 18
                        path: compiler-test
                        content: "    return r == c;"
                  span:
                    line_start: 6
                    line_stop: 6
                    col_start: 5
                    col_stop: 18
                    path: compiler-test
                    content: "    return r == c;"
            span:
              line_start: 3
              line_stop: 7
              col_start: 56
              col_stop: 2
              path: compiler-test
              content: "function main(s: bool, a: u32, b: u32, c: u32) -> bool {\n...\n}"
          span:
            line_start: 3
            line_stop: 7
            col_start: 1
            col_stop: 2
            path: compiler-test
            content: "function main(s: bool, a: u32, b: u32, c: u32) -> bool {\n...\n}\n\n"
    type_inferenced_theorem:
      name: test
      expected_input: []
      imports: []
      circuits: {}
      global_consts: {}
      functions:
        "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(s: bool, a: u32, b: u32, c: u32) -> bool {\\\"}\"}":
          annotations: []
          identifier: "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(s: bool, a: u32, b: u32, c: u32) -> bool {\\\"}\"}"
          input:
            - Variable:
                identifier: "{\"name\":\"s\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":15,\\\"col_stop\\\":16,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(s: bool, a: u32, b: u32, c: u32) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_: Boolean
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 15
                  col_stop: 16
                  path: compiler-test
                  content: "function main(s: bool, a: u32, b: u32, c: u32) -> bool {"
            - Variable:
                identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":24,\\\"col_stop\\\":25,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(s: bool, a: u32, b: u32, c: u32) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: U32
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 24
                  col_stop: 25
                  path: compiler-test
                  content: "function main(s: bool, a: u32, b: u32, c: u32) -> bool {"
            - Variable:
                identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":32,\\\"col_stop\\\":33,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(s: bool, a: u32, b: u32, c: u32) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: U32
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 32
                  col_stop: 33
                  path: compiler-test
                  content: "function main(s: bool, a: u32, b: u32, c: u32) -> bool {"
            - Variable:
                identifier: "{\"name\":\"c\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":40,\\\"col_stop\\\":41,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(s: bool, a: u32, b: u32, c: u32) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: U32
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 40
                  col_stop: 41
                  path: compiler-test
                  content: "function main(s: bool, a: u32, b: u32, c: u32) -> bool {"
          output: Boolean
          block:
            statements:
              - Definition:
                  declaration_type: Let
                  variable_names:
                    - mutable: true
                      identifier: "{\"name\":\"r\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":9,\\\"col_stop\\\":10,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    let r = s ? a : b;\\\"}\"}"
                      span:
                        line_start: 4
                        line_stop: 4
                        col_start: 9
                        col_stop: 10
                        path: compiler-test
                        content: "    let r = s ? a : b;"
                  type_:
                    IntegerType: U32
                  value:
                    Ternary:
                      condition:
                        Identifier: "{\"name\":\"s\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":13,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    let r = s ? a : b;\\\"}\"}"
                      if_true:
                        Identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":17,\\\"col_stop\\\":18,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    let r = s ? a : b;\\\"}\"}"
                      if_false:
                        Identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":21,\\\"col_stop\\\":22,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    let r = s ? a : b;\\\"}\"}"
                      span:
                        line_start: 4
                        line_stop: 4
                        col_start: 13
                        col_stop: 22
                        path: compiler-test
                        content: "    let r = s ? a : b;"
                  span:
                    line_start: 4
                    line_stop: 4
                    col_start: 5
                    col_stop: 22
                    path: compiler-test
                    content: "    let r = s ? a : b;"
              - Return:
                  expression:
                    Binary:
                      left:
                        Identifier: "{\"name\":\"r\",\"span\":\"{\\\"line_start\\\":6,\\\"line_stop\\\":6,\\\"col_start\\\":12,\\\"col_stop\\\":13,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return r == c;\\\"}\"}"
                      right:
                        Identifier: "{\"name\":\"c\",\"span\":\"{\\\"line_start\\\":6,\\\"line_stop\\\":6,\\\"col_start\\\":17,\\\"col_stop\\\":18,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return r == c;\\\"}\"}"
                      op: Eq
                      span:
                        line_start: 6
                        line_stop: 6
                        col_start: 12
                        col_stop: 18
                        path: compiler-test
                        content: "    return r == c;"
                  span:
                    line_start: 6
                    line_stop: 6
                    col_start: 5
                    col_stop: 18
                    path: compiler-test
                    content: "    return r == c;"
            span:
              line_start: 3
              line_stop: 7
              col_start: 56
              col_stop: 2
              path: compiler-test
              content: "function main(s: bool, a: u32, b: u32, c: u32) -> bool {\n...\n}"
          span:
            line_start: 3
            line_stop: 7
            col_start: 1
            col_stop: 2
            path: compiler-test
            content: "function main(s: bool, a: u32, b: u32, c: u32) -> bool {\n...\n}\n\n"
