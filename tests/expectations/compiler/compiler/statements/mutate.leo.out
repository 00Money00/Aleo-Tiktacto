---
namespace: Compile
expectation: Pass
outputs:
  - circuit:
      num_public_variables: 0
      num_private_variables: 253
      num_constraints: 317
      at: 30a9d7ef92bc14334cf2058df46dd513d99b7d21712c6c8bedfce9c48bc0f402
      bt: eaddc0804e3047ae886466758455accba906f9ae990696f12c17a3237a9c9688
      ct: e60851ccedd572c63dbcec5e0d84ddf45d76423dcf08fe0c9761fe17ce2bdd4e
    output:
      - input_file: inputs/u32_3.in
        output:
          registers:
            a:
              type: bool
              value: "true"
      - input_file: inputs/u32_5.in
        output:
          registers:
            a:
              type: bool
              value: "true"
    initial_theorem:
      name: ""
      expected_input: []
      imports: []
      circuits: {}
      global_consts: {}
      functions:
        "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(x: u32) -> bool {\\\"}\"}":
          annotations: []
          identifier: "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(x: u32) -> bool {\\\"}\"}"
          input:
            - Variable:
                identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":15,\\\"col_stop\\\":16,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(x: u32) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: U32
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 15
                  col_stop: 16
                  path: compiler-test
                  content: "function main(x: u32) -> bool {"
          output: Boolean
          block:
            statements:
              - Definition:
                  declaration_type: Let
                  variable_names:
                    - mutable: true
                      identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":9,\\\"col_stop\\\":10,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    let b = 5u32;\\\"}\"}"
                      span:
                        line_start: 4
                        line_stop: 4
                        col_start: 9
                        col_stop: 10
                        path: compiler-test
                        content: "    let b = 5u32;"
                  type_: ~
                  value:
                    Value:
                      Integer:
                        - U32
                        - "5"
                        - line_start: 4
                          line_stop: 4
                          col_start: 13
                          col_stop: 17
                          path: compiler-test
                          content: "    let b = 5u32;"
                  span:
                    line_start: 4
                    line_stop: 4
                    col_start: 5
                    col_stop: 17
                    path: compiler-test
                    content: "    let b = 5u32;"
              - Conditional:
                  condition:
                    Binary:
                      left:
                        Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":6,\\\"line_stop\\\":6,\\\"col_start\\\":8,\\\"col_stop\\\":9,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    if x == 3 {\\\"}\"}"
                      right:
                        Value:
                          Implicit:
                            - "3"
                            - line_start: 6
                              line_stop: 6
                              col_start: 13
                              col_stop: 14
                              path: compiler-test
                              content: "    if x == 3 {"
                      op: Eq
                      span:
                        line_start: 6
                        line_stop: 6
                        col_start: 8
                        col_stop: 14
                        path: compiler-test
                        content: "    if x == 3 {"
                  block:
                    statements:
                      - Assign:
                          operation: Assign
                          assignee:
                            identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":7,\\\"line_stop\\\":7,\\\"col_start\\\":9,\\\"col_stop\\\":10,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"        b = 1;\\\"}\"}"
                            accesses: []
                            span:
                              line_start: 7
                              line_stop: 7
                              col_start: 9
                              col_stop: 10
                              path: compiler-test
                              content: "        b = 1;"
                          value:
                            Value:
                              Implicit:
                                - "1"
                                - line_start: 7
                                  line_stop: 7
                                  col_start: 13
                                  col_stop: 14
                                  path: compiler-test
                                  content: "        b = 1;"
                          span:
                            line_start: 7
                            line_stop: 7
                            col_start: 9
                            col_stop: 14
                            path: compiler-test
                            content: "        b = 1;"
                    span:
                      line_start: 6
                      line_stop: 8
                      col_start: 15
                      col_stop: 6
                      path: compiler-test
                      content: "    if x == 3 {\n...\n    } else {"
                  next:
                    Block:
                      statements:
                        - Assign:
                            operation: Assign
                            assignee:
                              identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":9,\\\"line_stop\\\":9,\\\"col_start\\\":9,\\\"col_stop\\\":10,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"        b = 0;\\\"}\"}"
                              accesses: []
                              span:
                                line_start: 9
                                line_stop: 9
                                col_start: 9
                                col_stop: 10
                                path: compiler-test
                                content: "        b = 0;"
                            value:
                              Value:
                                Implicit:
                                  - "0"
                                  - line_start: 9
                                    line_stop: 9
                                    col_start: 13
                                    col_stop: 14
                                    path: compiler-test
                                    content: "        b = 0;"
                            span:
                              line_start: 9
                              line_stop: 9
                              col_start: 9
                              col_stop: 14
                              path: compiler-test
                              content: "        b = 0;"
                      span:
                        line_start: 8
                        line_stop: 10
                        col_start: 12
                        col_stop: 6
                        path: compiler-test
                        content: "    } else {\n...\n    }"
                  span:
                    line_start: 6
                    line_stop: 10
                    col_start: 5
                    col_stop: 6
                    path: compiler-test
                    content: "    if x == 3 {\n...\n    } else {\n...\n    }"
              - Conditional:
                  condition:
                    Binary:
                      left:
                        Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":12,\\\"line_stop\\\":12,\\\"col_start\\\":8,\\\"col_stop\\\":9,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    if x == 3 {\\\"}\"}"
                      right:
                        Value:
                          Implicit:
                            - "3"
                            - line_start: 12
                              line_stop: 12
                              col_start: 13
                              col_stop: 14
                              path: compiler-test
                              content: "    if x == 3 {"
                      op: Eq
                      span:
                        line_start: 12
                        line_stop: 12
                        col_start: 8
                        col_stop: 14
                        path: compiler-test
                        content: "    if x == 3 {"
                  block:
                    statements:
                      - Return:
                          expression:
                            Binary:
                              left:
                                Identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":13,\\\"line_stop\\\":13,\\\"col_start\\\":17,\\\"col_stop\\\":18,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"        return (b == 1);\\\"}\"}"
                              right:
                                Value:
                                  Implicit:
                                    - "1"
                                    - line_start: 13
                                      line_stop: 13
                                      col_start: 22
                                      col_stop: 23
                                      path: compiler-test
                                      content: "        return (b == 1);"
                              op: Eq
                              span:
                                line_start: 13
                                line_stop: 13
                                col_start: 17
                                col_stop: 23
                                path: compiler-test
                                content: "        return (b == 1);"
                          span:
                            line_start: 13
                            line_stop: 13
                            col_start: 9
                            col_stop: 23
                            path: compiler-test
                            content: "        return (b == 1);"
                    span:
                      line_start: 12
                      line_stop: 14
                      col_start: 15
                      col_stop: 6
                      path: compiler-test
                      content: "    if x == 3 {\n...\n    } else {"
                  next:
                    Block:
                      statements:
                        - Return:
                            expression:
                              Binary:
                                left:
                                  Identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":15,\\\"line_stop\\\":15,\\\"col_start\\\":17,\\\"col_stop\\\":18,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"        return (b == 0);\\\"}\"}"
                                right:
                                  Value:
                                    Implicit:
                                      - "0"
                                      - line_start: 15
                                        line_stop: 15
                                        col_start: 22
                                        col_stop: 23
                                        path: compiler-test
                                        content: "        return (b == 0);"
                                op: Eq
                                span:
                                  line_start: 15
                                  line_stop: 15
                                  col_start: 17
                                  col_stop: 23
                                  path: compiler-test
                                  content: "        return (b == 0);"
                            span:
                              line_start: 15
                              line_stop: 15
                              col_start: 9
                              col_stop: 23
                              path: compiler-test
                              content: "        return (b == 0);"
                      span:
                        line_start: 14
                        line_stop: 16
                        col_start: 12
                        col_stop: 6
                        path: compiler-test
                        content: "    } else {\n...\n    }"
                  span:
                    line_start: 12
                    line_stop: 16
                    col_start: 5
                    col_stop: 6
                    path: compiler-test
                    content: "    if x == 3 {\n...\n    } else {\n...\n    }"
            span:
              line_start: 3
              line_stop: 17
              col_start: 31
              col_stop: 2
              path: compiler-test
              content: "function main(x: u32) -> bool {\n...\n}"
          span:
            line_start: 3
            line_stop: 17
            col_start: 1
            col_stop: 2
            path: compiler-test
            content: "function main(x: u32) -> bool {\n...\n}\n\n\n\n\n\n\n\n\n\n\n\n"
    canonicalized_theorem:
      name: ""
      expected_input: []
      imports: []
      circuits: {}
      global_consts: {}
      functions:
        "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(x: u32) -> bool {\\\"}\"}":
          annotations: []
          identifier: "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(x: u32) -> bool {\\\"}\"}"
          input:
            - Variable:
                identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":15,\\\"col_stop\\\":16,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(x: u32) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: U32
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 15
                  col_stop: 16
                  path: compiler-test
                  content: "function main(x: u32) -> bool {"
          output: Boolean
          block:
            statements:
              - Definition:
                  declaration_type: Let
                  variable_names:
                    - mutable: true
                      identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":9,\\\"col_stop\\\":10,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    let b = 5u32;\\\"}\"}"
                      span:
                        line_start: 4
                        line_stop: 4
                        col_start: 9
                        col_stop: 10
                        path: compiler-test
                        content: "    let b = 5u32;"
                  type_: ~
                  value:
                    Value:
                      Integer:
                        - U32
                        - "5"
                        - line_start: 4
                          line_stop: 4
                          col_start: 13
                          col_stop: 17
                          path: compiler-test
                          content: "    let b = 5u32;"
                  span:
                    line_start: 4
                    line_stop: 4
                    col_start: 5
                    col_stop: 17
                    path: compiler-test
                    content: "    let b = 5u32;"
              - Conditional:
                  condition:
                    Binary:
                      left:
                        Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":6,\\\"line_stop\\\":6,\\\"col_start\\\":8,\\\"col_stop\\\":9,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    if x == 3 {\\\"}\"}"
                      right:
                        Value:
                          Implicit:
                            - "3"
                            - line_start: 6
                              line_stop: 6
                              col_start: 13
                              col_stop: 14
                              path: compiler-test
                              content: "    if x == 3 {"
                      op: Eq
                      span:
                        line_start: 6
                        line_stop: 6
                        col_start: 8
                        col_stop: 14
                        path: compiler-test
                        content: "    if x == 3 {"
                  block:
                    statements:
                      - Assign:
                          operation: Assign
                          assignee:
                            identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":7,\\\"line_stop\\\":7,\\\"col_start\\\":9,\\\"col_stop\\\":10,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"        b = 1;\\\"}\"}"
                            accesses: []
                            span:
                              line_start: 7
                              line_stop: 7
                              col_start: 9
                              col_stop: 10
                              path: compiler-test
                              content: "        b = 1;"
                          value:
                            Value:
                              Implicit:
                                - "1"
                                - line_start: 7
                                  line_stop: 7
                                  col_start: 13
                                  col_stop: 14
                                  path: compiler-test
                                  content: "        b = 1;"
                          span:
                            line_start: 7
                            line_stop: 7
                            col_start: 9
                            col_stop: 14
                            path: compiler-test
                            content: "        b = 1;"
                    span:
                      line_start: 6
                      line_stop: 8
                      col_start: 15
                      col_stop: 6
                      path: compiler-test
                      content: "    if x == 3 {\n...\n    } else {"
                  next:
                    Block:
                      statements:
                        - Assign:
                            operation: Assign
                            assignee:
                              identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":9,\\\"line_stop\\\":9,\\\"col_start\\\":9,\\\"col_stop\\\":10,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"        b = 0;\\\"}\"}"
                              accesses: []
                              span:
                                line_start: 9
                                line_stop: 9
                                col_start: 9
                                col_stop: 10
                                path: compiler-test
                                content: "        b = 0;"
                            value:
                              Value:
                                Implicit:
                                  - "0"
                                  - line_start: 9
                                    line_stop: 9
                                    col_start: 13
                                    col_stop: 14
                                    path: compiler-test
                                    content: "        b = 0;"
                            span:
                              line_start: 9
                              line_stop: 9
                              col_start: 9
                              col_stop: 14
                              path: compiler-test
                              content: "        b = 0;"
                      span:
                        line_start: 8
                        line_stop: 10
                        col_start: 12
                        col_stop: 6
                        path: compiler-test
                        content: "    } else {\n...\n    }"
                  span:
                    line_start: 6
                    line_stop: 10
                    col_start: 5
                    col_stop: 6
                    path: compiler-test
                    content: "    if x == 3 {\n...\n    } else {\n...\n    }"
              - Conditional:
                  condition:
                    Binary:
                      left:
                        Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":12,\\\"line_stop\\\":12,\\\"col_start\\\":8,\\\"col_stop\\\":9,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    if x == 3 {\\\"}\"}"
                      right:
                        Value:
                          Implicit:
                            - "3"
                            - line_start: 12
                              line_stop: 12
                              col_start: 13
                              col_stop: 14
                              path: compiler-test
                              content: "    if x == 3 {"
                      op: Eq
                      span:
                        line_start: 12
                        line_stop: 12
                        col_start: 8
                        col_stop: 14
                        path: compiler-test
                        content: "    if x == 3 {"
                  block:
                    statements:
                      - Return:
                          expression:
                            Binary:
                              left:
                                Identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":13,\\\"line_stop\\\":13,\\\"col_start\\\":17,\\\"col_stop\\\":18,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"        return (b == 1);\\\"}\"}"
                              right:
                                Value:
                                  Implicit:
                                    - "1"
                                    - line_start: 13
                                      line_stop: 13
                                      col_start: 22
                                      col_stop: 23
                                      path: compiler-test
                                      content: "        return (b == 1);"
                              op: Eq
                              span:
                                line_start: 13
                                line_stop: 13
                                col_start: 17
                                col_stop: 23
                                path: compiler-test
                                content: "        return (b == 1);"
                          span:
                            line_start: 13
                            line_stop: 13
                            col_start: 9
                            col_stop: 23
                            path: compiler-test
                            content: "        return (b == 1);"
                    span:
                      line_start: 12
                      line_stop: 14
                      col_start: 15
                      col_stop: 6
                      path: compiler-test
                      content: "    if x == 3 {\n...\n    } else {"
                  next:
                    Block:
                      statements:
                        - Return:
                            expression:
                              Binary:
                                left:
                                  Identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":15,\\\"line_stop\\\":15,\\\"col_start\\\":17,\\\"col_stop\\\":18,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"        return (b == 0);\\\"}\"}"
                                right:
                                  Value:
                                    Implicit:
                                      - "0"
                                      - line_start: 15
                                        line_stop: 15
                                        col_start: 22
                                        col_stop: 23
                                        path: compiler-test
                                        content: "        return (b == 0);"
                                op: Eq
                                span:
                                  line_start: 15
                                  line_stop: 15
                                  col_start: 17
                                  col_stop: 23
                                  path: compiler-test
                                  content: "        return (b == 0);"
                            span:
                              line_start: 15
                              line_stop: 15
                              col_start: 9
                              col_stop: 23
                              path: compiler-test
                              content: "        return (b == 0);"
                      span:
                        line_start: 14
                        line_stop: 16
                        col_start: 12
                        col_stop: 6
                        path: compiler-test
                        content: "    } else {\n...\n    }"
                  span:
                    line_start: 12
                    line_stop: 16
                    col_start: 5
                    col_stop: 6
                    path: compiler-test
                    content: "    if x == 3 {\n...\n    } else {\n...\n    }"
            span:
              line_start: 3
              line_stop: 17
              col_start: 31
              col_stop: 2
              path: compiler-test
              content: "function main(x: u32) -> bool {\n...\n}"
          span:
            line_start: 3
            line_stop: 17
            col_start: 1
            col_stop: 2
            path: compiler-test
            content: "function main(x: u32) -> bool {\n...\n}\n\n\n\n\n\n\n\n\n\n\n\n"
    type_inferenced_theorem:
      name: test
      expected_input: []
      imports: []
      circuits: {}
      global_consts: {}
      functions:
        "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(x: u32) -> bool {\\\"}\"}":
          annotations: []
          identifier: "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(x: u32) -> bool {\\\"}\"}"
          input:
            - Variable:
                identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":15,\\\"col_stop\\\":16,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(x: u32) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: U32
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 15
                  col_stop: 16
                  path: compiler-test
                  content: "function main(x: u32) -> bool {"
          output: Boolean
          block:
            statements:
              - Definition:
                  declaration_type: Let
                  variable_names:
                    - mutable: true
                      identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":9,\\\"col_stop\\\":10,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    let b = 5u32;\\\"}\"}"
                      span:
                        line_start: 4
                        line_stop: 4
                        col_start: 9
                        col_stop: 10
                        path: compiler-test
                        content: "    let b = 5u32;"
                  type_:
                    IntegerType: U32
                  value:
                    Value:
                      Integer:
                        - U32
                        - "5"
                        - line_start: 4
                          line_stop: 4
                          col_start: 13
                          col_stop: 17
                          path: compiler-test
                          content: "    let b = 5u32;"
                  span:
                    line_start: 4
                    line_stop: 4
                    col_start: 5
                    col_stop: 17
                    path: compiler-test
                    content: "    let b = 5u32;"
              - Conditional:
                  condition:
                    Binary:
                      left:
                        Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":6,\\\"line_stop\\\":6,\\\"col_start\\\":8,\\\"col_stop\\\":9,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    if x == 3 {\\\"}\"}"
                      right:
                        Value:
                          Integer:
                            - U32
                            - "3"
                            - line_start: 6
                              line_stop: 6
                              col_start: 13
                              col_stop: 14
                              path: compiler-test
                              content: "    if x == 3 {"
                      op: Eq
                      span:
                        line_start: 6
                        line_stop: 6
                        col_start: 8
                        col_stop: 14
                        path: compiler-test
                        content: "    if x == 3 {"
                  block:
                    statements:
                      - Assign:
                          operation: Assign
                          assignee:
                            identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":7,\\\"line_stop\\\":7,\\\"col_start\\\":9,\\\"col_stop\\\":10,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"        b = 1;\\\"}\"}"
                            accesses: []
                            span:
                              line_start: 7
                              line_stop: 7
                              col_start: 9
                              col_stop: 10
                              path: compiler-test
                              content: "        b = 1;"
                          value:
                            Value:
                              Integer:
                                - U32
                                - "1"
                                - line_start: 7
                                  line_stop: 7
                                  col_start: 13
                                  col_stop: 14
                                  path: compiler-test
                                  content: "        b = 1;"
                          span:
                            line_start: 7
                            line_stop: 7
                            col_start: 9
                            col_stop: 14
                            path: compiler-test
                            content: "        b = 1;"
                    span:
                      line_start: 6
                      line_stop: 8
                      col_start: 15
                      col_stop: 6
                      path: compiler-test
                      content: "    if x == 3 {\n...\n    } else {"
                  next:
                    Block:
                      statements:
                        - Assign:
                            operation: Assign
                            assignee:
                              identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":9,\\\"line_stop\\\":9,\\\"col_start\\\":9,\\\"col_stop\\\":10,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"        b = 0;\\\"}\"}"
                              accesses: []
                              span:
                                line_start: 9
                                line_stop: 9
                                col_start: 9
                                col_stop: 10
                                path: compiler-test
                                content: "        b = 0;"
                            value:
                              Value:
                                Integer:
                                  - U32
                                  - "0"
                                  - line_start: 9
                                    line_stop: 9
                                    col_start: 13
                                    col_stop: 14
                                    path: compiler-test
                                    content: "        b = 0;"
                            span:
                              line_start: 9
                              line_stop: 9
                              col_start: 9
                              col_stop: 14
                              path: compiler-test
                              content: "        b = 0;"
                      span:
                        line_start: 8
                        line_stop: 10
                        col_start: 12
                        col_stop: 6
                        path: compiler-test
                        content: "    } else {\n...\n    }"
                  span:
                    line_start: 6
                    line_stop: 10
                    col_start: 5
                    col_stop: 6
                    path: compiler-test
                    content: "    if x == 3 {\n...\n    } else {\n...\n    }"
              - Conditional:
                  condition:
                    Binary:
                      left:
                        Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":12,\\\"line_stop\\\":12,\\\"col_start\\\":8,\\\"col_stop\\\":9,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    if x == 3 {\\\"}\"}"
                      right:
                        Value:
                          Integer:
                            - U32
                            - "3"
                            - line_start: 12
                              line_stop: 12
                              col_start: 13
                              col_stop: 14
                              path: compiler-test
                              content: "    if x == 3 {"
                      op: Eq
                      span:
                        line_start: 12
                        line_stop: 12
                        col_start: 8
                        col_stop: 14
                        path: compiler-test
                        content: "    if x == 3 {"
                  block:
                    statements:
                      - Return:
                          expression:
                            Binary:
                              left:
                                Identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":13,\\\"line_stop\\\":13,\\\"col_start\\\":17,\\\"col_stop\\\":18,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"        return (b == 1);\\\"}\"}"
                              right:
                                Value:
                                  Integer:
                                    - U32
                                    - "1"
                                    - line_start: 13
                                      line_stop: 13
                                      col_start: 22
                                      col_stop: 23
                                      path: compiler-test
                                      content: "        return (b == 1);"
                              op: Eq
                              span:
                                line_start: 13
                                line_stop: 13
                                col_start: 17
                                col_stop: 23
                                path: compiler-test
                                content: "        return (b == 1);"
                          span:
                            line_start: 13
                            line_stop: 13
                            col_start: 9
                            col_stop: 23
                            path: compiler-test
                            content: "        return (b == 1);"
                    span:
                      line_start: 12
                      line_stop: 14
                      col_start: 15
                      col_stop: 6
                      path: compiler-test
                      content: "    if x == 3 {\n...\n    } else {"
                  next:
                    Block:
                      statements:
                        - Return:
                            expression:
                              Binary:
                                left:
                                  Identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":15,\\\"line_stop\\\":15,\\\"col_start\\\":17,\\\"col_stop\\\":18,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"        return (b == 0);\\\"}\"}"
                                right:
                                  Value:
                                    Integer:
                                      - U32
                                      - "0"
                                      - line_start: 15
                                        line_stop: 15
                                        col_start: 22
                                        col_stop: 23
                                        path: compiler-test
                                        content: "        return (b == 0);"
                                op: Eq
                                span:
                                  line_start: 15
                                  line_stop: 15
                                  col_start: 17
                                  col_stop: 23
                                  path: compiler-test
                                  content: "        return (b == 0);"
                            span:
                              line_start: 15
                              line_stop: 15
                              col_start: 9
                              col_stop: 23
                              path: compiler-test
                              content: "        return (b == 0);"
                      span:
                        line_start: 14
                        line_stop: 16
                        col_start: 12
                        col_stop: 6
                        path: compiler-test
                        content: "    } else {\n...\n    }"
                  span:
                    line_start: 12
                    line_stop: 16
                    col_start: 5
                    col_stop: 6
                    path: compiler-test
                    content: "    if x == 3 {\n...\n    } else {\n...\n    }"
            span:
              line_start: 3
              line_stop: 17
              col_start: 31
              col_stop: 2
              path: compiler-test
              content: "function main(x: u32) -> bool {\n...\n}"
          span:
            line_start: 3
            line_stop: 17
            col_start: 1
            col_stop: 2
            path: compiler-test
            content: "function main(x: u32) -> bool {\n...\n}\n\n\n\n\n\n\n\n\n\n\n\n"
