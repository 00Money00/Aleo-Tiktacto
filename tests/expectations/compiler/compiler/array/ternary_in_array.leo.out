---
namespace: Compile
expectation: Pass
outputs:
  - circuit:
      num_public_variables: 0
      num_private_variables: 39
      num_constraints: 39
      at: 6f3ffff33f4e513211e7a55cc9edcab3bc2d2a146c2b280981308bb69165f86f
      bt: adde6ad1b603a50c986ec99b6edcc972138bb6239e58a1b88e931bc0165b2e8e
      ct: 867e3f6ee1f26af954e7868633a595d319267d91afc5d7e2074fe641fabde1d6
    output:
      - input_file: input/three_ones.in
        output:
          registers:
            x:
              type: bool
              value: "true"
    initial_theorem:
      name: ""
      expected_input: []
      imports: []
      circuits: {}
      global_consts: {}
      functions:
        "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main (a: [u8; 3]) -> bool {\\\"}\"}":
          annotations: []
          identifier: "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main (a: [u8; 3]) -> bool {\\\"}\"}"
          input:
            - Variable:
                identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":16,\\\"col_stop\\\":17,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main (a: [u8; 3]) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  Array:
                    - IntegerType: U8
                    - - value: "3"
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 16
                  col_stop: 17
                  path: compiler-test
                  content: "function main (a: [u8; 3]) -> bool {"
          output: Boolean
          block:
            statements:
              - Definition:
                  declaration_type: Let
                  variable_names:
                    - mutable: true
                      identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":9,\\\"col_stop\\\":10,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    let y = a[0..[0u8; 2] == [0u8; 2]? 2u8 : 2u8];\\\"}\"}"
                      span:
                        line_start: 4
                        line_stop: 4
                        col_start: 9
                        col_stop: 10
                        path: compiler-test
                        content: "    let y = a[0..[0u8; 2] == [0u8; 2]? 2u8 : 2u8];"
                  type_: ~
                  value:
                    ArrayRangeAccess:
                      array:
                        Identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":13,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    let y = a[0..[0u8; 2] == [0u8; 2]? 2u8 : 2u8];\\\"}\"}"
                      left:
                        Value:
                          Implicit:
                            - "0"
                            - line_start: 4
                              line_stop: 4
                              col_start: 15
                              col_stop: 16
                              path: compiler-test
                              content: "    let y = a[0..[0u8; 2] == [0u8; 2]? 2u8 : 2u8];"
                      right:
                        Ternary:
                          condition:
                            Binary:
                              left:
                                ArrayInit:
                                  element:
                                    Value:
                                      Integer:
                                        - U8
                                        - "0"
                                        - line_start: 4
                                          line_stop: 4
                                          col_start: 19
                                          col_stop: 22
                                          path: compiler-test
                                          content: "    let y = a[0..[0u8; 2] == [0u8; 2]? 2u8 : 2u8];"
                                  dimensions:
                                    - value: "2"
                                  span:
                                    line_start: 4
                                    line_stop: 4
                                    col_start: 18
                                    col_stop: 26
                                    path: compiler-test
                                    content: "    let y = a[0..[0u8; 2] == [0u8; 2]? 2u8 : 2u8];"
                              right:
                                ArrayInit:
                                  element:
                                    Value:
                                      Integer:
                                        - U8
                                        - "0"
                                        - line_start: 4
                                          line_stop: 4
                                          col_start: 31
                                          col_stop: 34
                                          path: compiler-test
                                          content: "    let y = a[0..[0u8; 2] == [0u8; 2]? 2u8 : 2u8];"
                                  dimensions:
                                    - value: "2"
                                  span:
                                    line_start: 4
                                    line_stop: 4
                                    col_start: 30
                                    col_stop: 38
                                    path: compiler-test
                                    content: "    let y = a[0..[0u8; 2] == [0u8; 2]? 2u8 : 2u8];"
                              op: Eq
                              span:
                                line_start: 4
                                line_stop: 4
                                col_start: 18
                                col_stop: 38
                                path: compiler-test
                                content: "    let y = a[0..[0u8; 2] == [0u8; 2]? 2u8 : 2u8];"
                          if_true:
                            Value:
                              Integer:
                                - U8
                                - "2"
                                - line_start: 4
                                  line_stop: 4
                                  col_start: 40
                                  col_stop: 43
                                  path: compiler-test
                                  content: "    let y = a[0..[0u8; 2] == [0u8; 2]? 2u8 : 2u8];"
                          if_false:
                            Value:
                              Integer:
                                - U8
                                - "2"
                                - line_start: 4
                                  line_stop: 4
                                  col_start: 46
                                  col_stop: 49
                                  path: compiler-test
                                  content: "    let y = a[0..[0u8; 2] == [0u8; 2]? 2u8 : 2u8];"
                          span:
                            line_start: 4
                            line_stop: 4
                            col_start: 18
                            col_stop: 49
                            path: compiler-test
                            content: "    let y = a[0..[0u8; 2] == [0u8; 2]? 2u8 : 2u8];"
                      span:
                        line_start: 4
                        line_stop: 4
                        col_start: 13
                        col_stop: 50
                        path: compiler-test
                        content: "    let y = a[0..[0u8; 2] == [0u8; 2]? 2u8 : 2u8];"
                  span:
                    line_start: 4
                    line_stop: 4
                    col_start: 5
                    col_stop: 50
                    path: compiler-test
                    content: "    let y = a[0..[0u8; 2] == [0u8; 2]? 2u8 : 2u8];"
              - Return:
                  expression:
                    Binary:
                      left:
                        Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":5,\\\"line_stop\\\":5,\\\"col_start\\\":12,\\\"col_stop\\\":13,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return y == [1u8, 1];\\\"}\"}"
                      right:
                        ArrayInline:
                          elements:
                            - Expression:
                                Value:
                                  Integer:
                                    - U8
                                    - "1"
                                    - line_start: 5
                                      line_stop: 5
                                      col_start: 18
                                      col_stop: 21
                                      path: compiler-test
                                      content: "    return y == [1u8, 1];"
                            - Expression:
                                Value:
                                  Implicit:
                                    - "1"
                                    - line_start: 5
                                      line_stop: 5
                                      col_start: 23
                                      col_stop: 24
                                      path: compiler-test
                                      content: "    return y == [1u8, 1];"
                          span:
                            line_start: 5
                            line_stop: 5
                            col_start: 17
                            col_stop: 25
                            path: compiler-test
                            content: "    return y == [1u8, 1];"
                      op: Eq
                      span:
                        line_start: 5
                        line_stop: 5
                        col_start: 12
                        col_stop: 25
                        path: compiler-test
                        content: "    return y == [1u8, 1];"
                  span:
                    line_start: 5
                    line_stop: 5
                    col_start: 5
                    col_stop: 25
                    path: compiler-test
                    content: "    return y == [1u8, 1];"
            span:
              line_start: 3
              line_stop: 6
              col_start: 36
              col_stop: 2
              path: compiler-test
              content: "function main (a: [u8; 3]) -> bool {\n...\n}"
          span:
            line_start: 3
            line_stop: 6
            col_start: 1
            col_stop: 2
            path: compiler-test
            content: "function main (a: [u8; 3]) -> bool {\n...\n}\n"
    canonicalized_theorem:
      name: ""
      expected_input: []
      imports: []
      circuits: {}
      global_consts: {}
      functions:
        "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main (a: [u8; 3]) -> bool {\\\"}\"}":
          annotations: []
          identifier: "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main (a: [u8; 3]) -> bool {\\\"}\"}"
          input:
            - Variable:
                identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":16,\\\"col_stop\\\":17,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main (a: [u8; 3]) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  Array:
                    - IntegerType: U8
                    - - value: "3"
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 16
                  col_stop: 17
                  path: compiler-test
                  content: "function main (a: [u8; 3]) -> bool {"
          output: Boolean
          block:
            statements:
              - Definition:
                  declaration_type: Let
                  variable_names:
                    - mutable: true
                      identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":9,\\\"col_stop\\\":10,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    let y = a[0..[0u8; 2] == [0u8; 2]? 2u8 : 2u8];\\\"}\"}"
                      span:
                        line_start: 4
                        line_stop: 4
                        col_start: 9
                        col_stop: 10
                        path: compiler-test
                        content: "    let y = a[0..[0u8; 2] == [0u8; 2]? 2u8 : 2u8];"
                  type_: ~
                  value:
                    ArrayRangeAccess:
                      array:
                        Identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":13,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    let y = a[0..[0u8; 2] == [0u8; 2]? 2u8 : 2u8];\\\"}\"}"
                      left:
                        Value:
                          Implicit:
                            - "0"
                            - line_start: 4
                              line_stop: 4
                              col_start: 15
                              col_stop: 16
                              path: compiler-test
                              content: "    let y = a[0..[0u8; 2] == [0u8; 2]? 2u8 : 2u8];"
                      right:
                        Ternary:
                          condition:
                            Binary:
                              left:
                                ArrayInit:
                                  element:
                                    Value:
                                      Integer:
                                        - U8
                                        - "0"
                                        - line_start: 4
                                          line_stop: 4
                                          col_start: 19
                                          col_stop: 22
                                          path: compiler-test
                                          content: "    let y = a[0..[0u8; 2] == [0u8; 2]? 2u8 : 2u8];"
                                  dimensions:
                                    - value: "2"
                                  span:
                                    line_start: 4
                                    line_stop: 4
                                    col_start: 18
                                    col_stop: 26
                                    path: compiler-test
                                    content: "    let y = a[0..[0u8; 2] == [0u8; 2]? 2u8 : 2u8];"
                              right:
                                ArrayInit:
                                  element:
                                    Value:
                                      Integer:
                                        - U8
                                        - "0"
                                        - line_start: 4
                                          line_stop: 4
                                          col_start: 31
                                          col_stop: 34
                                          path: compiler-test
                                          content: "    let y = a[0..[0u8; 2] == [0u8; 2]? 2u8 : 2u8];"
                                  dimensions:
                                    - value: "2"
                                  span:
                                    line_start: 4
                                    line_stop: 4
                                    col_start: 30
                                    col_stop: 38
                                    path: compiler-test
                                    content: "    let y = a[0..[0u8; 2] == [0u8; 2]? 2u8 : 2u8];"
                              op: Eq
                              span:
                                line_start: 4
                                line_stop: 4
                                col_start: 18
                                col_stop: 38
                                path: compiler-test
                                content: "    let y = a[0..[0u8; 2] == [0u8; 2]? 2u8 : 2u8];"
                          if_true:
                            Value:
                              Integer:
                                - U8
                                - "2"
                                - line_start: 4
                                  line_stop: 4
                                  col_start: 40
                                  col_stop: 43
                                  path: compiler-test
                                  content: "    let y = a[0..[0u8; 2] == [0u8; 2]? 2u8 : 2u8];"
                          if_false:
                            Value:
                              Integer:
                                - U8
                                - "2"
                                - line_start: 4
                                  line_stop: 4
                                  col_start: 46
                                  col_stop: 49
                                  path: compiler-test
                                  content: "    let y = a[0..[0u8; 2] == [0u8; 2]? 2u8 : 2u8];"
                          span:
                            line_start: 4
                            line_stop: 4
                            col_start: 18
                            col_stop: 49
                            path: compiler-test
                            content: "    let y = a[0..[0u8; 2] == [0u8; 2]? 2u8 : 2u8];"
                      span:
                        line_start: 4
                        line_stop: 4
                        col_start: 13
                        col_stop: 50
                        path: compiler-test
                        content: "    let y = a[0..[0u8; 2] == [0u8; 2]? 2u8 : 2u8];"
                  span:
                    line_start: 4
                    line_stop: 4
                    col_start: 5
                    col_stop: 50
                    path: compiler-test
                    content: "    let y = a[0..[0u8; 2] == [0u8; 2]? 2u8 : 2u8];"
              - Return:
                  expression:
                    Binary:
                      left:
                        Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":5,\\\"line_stop\\\":5,\\\"col_start\\\":12,\\\"col_stop\\\":13,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return y == [1u8, 1];\\\"}\"}"
                      right:
                        ArrayInline:
                          elements:
                            - Expression:
                                Value:
                                  Integer:
                                    - U8
                                    - "1"
                                    - line_start: 5
                                      line_stop: 5
                                      col_start: 18
                                      col_stop: 21
                                      path: compiler-test
                                      content: "    return y == [1u8, 1];"
                            - Expression:
                                Value:
                                  Implicit:
                                    - "1"
                                    - line_start: 5
                                      line_stop: 5
                                      col_start: 23
                                      col_stop: 24
                                      path: compiler-test
                                      content: "    return y == [1u8, 1];"
                          span:
                            line_start: 5
                            line_stop: 5
                            col_start: 17
                            col_stop: 25
                            path: compiler-test
                            content: "    return y == [1u8, 1];"
                      op: Eq
                      span:
                        line_start: 5
                        line_stop: 5
                        col_start: 12
                        col_stop: 25
                        path: compiler-test
                        content: "    return y == [1u8, 1];"
                  span:
                    line_start: 5
                    line_stop: 5
                    col_start: 5
                    col_stop: 25
                    path: compiler-test
                    content: "    return y == [1u8, 1];"
            span:
              line_start: 3
              line_stop: 6
              col_start: 36
              col_stop: 2
              path: compiler-test
              content: "function main (a: [u8; 3]) -> bool {\n...\n}"
          span:
            line_start: 3
            line_stop: 6
            col_start: 1
            col_stop: 2
            path: compiler-test
            content: "function main (a: [u8; 3]) -> bool {\n...\n}\n"
    type_inferenced_theorem:
      name: test
      expected_input: []
      imports: []
      circuits: {}
      global_consts: {}
      functions:
        "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main (a: [u8; 3]) -> bool {\\\"}\"}":
          annotations: []
          identifier: "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main (a: [u8; 3]) -> bool {\\\"}\"}"
          input:
            - Variable:
                identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":16,\\\"col_stop\\\":17,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main (a: [u8; 3]) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  Array:
                    - IntegerType: U8
                    - - value: "3"
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 16
                  col_stop: 17
                  path: compiler-test
                  content: "function main (a: [u8; 3]) -> bool {"
          output: Boolean
          block:
            statements:
              - Definition:
                  declaration_type: Let
                  variable_names:
                    - mutable: true
                      identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":9,\\\"col_stop\\\":10,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    let y = a[0..[0u8; 2] == [0u8; 2]? 2u8 : 2u8];\\\"}\"}"
                      span:
                        line_start: 4
                        line_stop: 4
                        col_start: 9
                        col_stop: 10
                        path: compiler-test
                        content: "    let y = a[0..[0u8; 2] == [0u8; 2]? 2u8 : 2u8];"
                  type_:
                    Array:
                      - IntegerType: U8
                      - - value: "2"
                  value:
                    ArrayRangeAccess:
                      array:
                        Identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":13,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    let y = a[0..[0u8; 2] == [0u8; 2]? 2u8 : 2u8];\\\"}\"}"
                      left:
                        Value:
                          Integer:
                            - U32
                            - "0"
                            - line_start: 4
                              line_stop: 4
                              col_start: 15
                              col_stop: 16
                              path: compiler-test
                              content: "    let y = a[0..[0u8; 2] == [0u8; 2]? 2u8 : 2u8];"
                      right:
                        Ternary:
                          condition:
                            Binary:
                              left:
                                ArrayInit:
                                  element:
                                    Value:
                                      Integer:
                                        - U8
                                        - "0"
                                        - line_start: 4
                                          line_stop: 4
                                          col_start: 19
                                          col_stop: 22
                                          path: compiler-test
                                          content: "    let y = a[0..[0u8; 2] == [0u8; 2]? 2u8 : 2u8];"
                                  dimensions:
                                    - value: "2"
                                  span:
                                    line_start: 4
                                    line_stop: 4
                                    col_start: 18
                                    col_stop: 26
                                    path: compiler-test
                                    content: "    let y = a[0..[0u8; 2] == [0u8; 2]? 2u8 : 2u8];"
                              right:
                                ArrayInit:
                                  element:
                                    Value:
                                      Integer:
                                        - U8
                                        - "0"
                                        - line_start: 4
                                          line_stop: 4
                                          col_start: 31
                                          col_stop: 34
                                          path: compiler-test
                                          content: "    let y = a[0..[0u8; 2] == [0u8; 2]? 2u8 : 2u8];"
                                  dimensions:
                                    - value: "2"
                                  span:
                                    line_start: 4
                                    line_stop: 4
                                    col_start: 30
                                    col_stop: 38
                                    path: compiler-test
                                    content: "    let y = a[0..[0u8; 2] == [0u8; 2]? 2u8 : 2u8];"
                              op: Eq
                              span:
                                line_start: 4
                                line_stop: 4
                                col_start: 18
                                col_stop: 38
                                path: compiler-test
                                content: "    let y = a[0..[0u8; 2] == [0u8; 2]? 2u8 : 2u8];"
                          if_true:
                            Value:
                              Integer:
                                - U8
                                - "2"
                                - line_start: 4
                                  line_stop: 4
                                  col_start: 40
                                  col_stop: 43
                                  path: compiler-test
                                  content: "    let y = a[0..[0u8; 2] == [0u8; 2]? 2u8 : 2u8];"
                          if_false:
                            Value:
                              Integer:
                                - U8
                                - "2"
                                - line_start: 4
                                  line_stop: 4
                                  col_start: 46
                                  col_stop: 49
                                  path: compiler-test
                                  content: "    let y = a[0..[0u8; 2] == [0u8; 2]? 2u8 : 2u8];"
                          span:
                            line_start: 4
                            line_stop: 4
                            col_start: 18
                            col_stop: 49
                            path: compiler-test
                            content: "    let y = a[0..[0u8; 2] == [0u8; 2]? 2u8 : 2u8];"
                      span:
                        line_start: 4
                        line_stop: 4
                        col_start: 13
                        col_stop: 50
                        path: compiler-test
                        content: "    let y = a[0..[0u8; 2] == [0u8; 2]? 2u8 : 2u8];"
                  span:
                    line_start: 4
                    line_stop: 4
                    col_start: 5
                    col_stop: 50
                    path: compiler-test
                    content: "    let y = a[0..[0u8; 2] == [0u8; 2]? 2u8 : 2u8];"
              - Return:
                  expression:
                    Binary:
                      left:
                        Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":5,\\\"line_stop\\\":5,\\\"col_start\\\":12,\\\"col_stop\\\":13,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return y == [1u8, 1];\\\"}\"}"
                      right:
                        ArrayInline:
                          elements:
                            - Expression:
                                Value:
                                  Integer:
                                    - U8
                                    - "1"
                                    - line_start: 5
                                      line_stop: 5
                                      col_start: 18
                                      col_stop: 21
                                      path: compiler-test
                                      content: "    return y == [1u8, 1];"
                            - Expression:
                                Value:
                                  Integer:
                                    - U8
                                    - "1"
                                    - line_start: 5
                                      line_stop: 5
                                      col_start: 23
                                      col_stop: 24
                                      path: compiler-test
                                      content: "    return y == [1u8, 1];"
                          span:
                            line_start: 5
                            line_stop: 5
                            col_start: 17
                            col_stop: 25
                            path: compiler-test
                            content: "    return y == [1u8, 1];"
                      op: Eq
                      span:
                        line_start: 5
                        line_stop: 5
                        col_start: 12
                        col_stop: 25
                        path: compiler-test
                        content: "    return y == [1u8, 1];"
                  span:
                    line_start: 5
                    line_stop: 5
                    col_start: 5
                    col_stop: 25
                    path: compiler-test
                    content: "    return y == [1u8, 1];"
            span:
              line_start: 3
              line_stop: 6
              col_start: 36
              col_stop: 2
              path: compiler-test
              content: "function main (a: [u8; 3]) -> bool {\n...\n}"
          span:
            line_start: 3
            line_stop: 6
            col_start: 1
            col_stop: 2
            path: compiler-test
            content: "function main (a: [u8; 3]) -> bool {\n...\n}\n"
