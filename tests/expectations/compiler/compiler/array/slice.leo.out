---
namespace: Compile
expectation: Pass
outputs:
  - circuit:
      num_public_variables: 0
      num_private_variables: 47
      num_constraints: 47
      at: 9034e7c6c2ae58e279196614600093d655bcdad8237302b84a66e63ec1c2f00e
      bt: f23a0442b41c8901611d5f1a9a8493a0cb03c68e183a81a1b88c5a6600fa7420
      ct: ad66abc1bf940dbc76573c0a516ebf633c1411f9997101d86ded0faff025d52c
    output:
      - input_file: input/three_ones.in
        output:
          registers:
            x:
              type: bool
              value: "true"
    initial_theorem:
      name: ""
      expected_input: []
      imports: []
      circuits: {}
      global_consts: {}
      functions:
        "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: [u8; 3]) -> bool {\\\"}\"}":
          annotations: []
          identifier: "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: [u8; 3]) -> bool {\\\"}\"}"
          input:
            - Variable:
                identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":15,\\\"col_stop\\\":16,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: [u8; 3]) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  Array:
                    - IntegerType: U8
                    - - value: "3"
                span:
                  line_start: 4
                  line_stop: 4
                  col_start: 15
                  col_stop: 16
                  path: compiler-test
                  content: "function main(a: [u8; 3]) -> bool {"
          output: Boolean
          block:
            statements:
              - Definition:
                  declaration_type: Const
                  variable_names:
                    - mutable: false
                      identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":5,\\\"line_stop\\\":5,\\\"col_start\\\":11,\\\"col_stop\\\":12,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    const b = [1u8; 4];\\\"}\"}"
                      span:
                        line_start: 5
                        line_stop: 5
                        col_start: 11
                        col_stop: 12
                        path: compiler-test
                        content: "    const b = [1u8; 4];"
                  type_: ~
                  value:
                    ArrayInit:
                      element:
                        Value:
                          Integer:
                            - U8
                            - "1"
                            - line_start: 5
                              line_stop: 5
                              col_start: 16
                              col_stop: 19
                              path: compiler-test
                              content: "    const b = [1u8; 4];"
                      dimensions:
                        - value: "4"
                      span:
                        line_start: 5
                        line_stop: 5
                        col_start: 15
                        col_stop: 23
                        path: compiler-test
                        content: "    const b = [1u8; 4];"
                  span:
                    line_start: 5
                    line_stop: 5
                    col_start: 5
                    col_stop: 23
                    path: compiler-test
                    content: "    const b = [1u8; 4];"
              - Return:
                  expression:
                    Binary:
                      left:
                        Identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":6,\\\"line_stop\\\":6,\\\"col_start\\\":12,\\\"col_stop\\\":13,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return a == b[0..3];\\\"}\"}"
                      right:
                        ArrayRangeAccess:
                          array:
                            Identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":6,\\\"line_stop\\\":6,\\\"col_start\\\":17,\\\"col_stop\\\":18,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return a == b[0..3];\\\"}\"}"
                          left:
                            Value:
                              Implicit:
                                - "0"
                                - line_start: 6
                                  line_stop: 6
                                  col_start: 19
                                  col_stop: 20
                                  path: compiler-test
                                  content: "    return a == b[0..3];"
                          right:
                            Value:
                              Implicit:
                                - "3"
                                - line_start: 6
                                  line_stop: 6
                                  col_start: 22
                                  col_stop: 23
                                  path: compiler-test
                                  content: "    return a == b[0..3];"
                          span:
                            line_start: 6
                            line_stop: 6
                            col_start: 17
                            col_stop: 24
                            path: compiler-test
                            content: "    return a == b[0..3];"
                      op: Eq
                      span:
                        line_start: 6
                        line_stop: 6
                        col_start: 12
                        col_stop: 24
                        path: compiler-test
                        content: "    return a == b[0..3];"
                  span:
                    line_start: 6
                    line_stop: 6
                    col_start: 5
                    col_stop: 24
                    path: compiler-test
                    content: "    return a == b[0..3];"
            span:
              line_start: 4
              line_stop: 7
              col_start: 35
              col_stop: 2
              path: compiler-test
              content: "function main(a: [u8; 3]) -> bool {\n...\n}"
          span:
            line_start: 4
            line_stop: 7
            col_start: 1
            col_stop: 2
            path: compiler-test
            content: "function main(a: [u8; 3]) -> bool {\n...\n}\n"
    canonicalized_theorem:
      name: ""
      expected_input: []
      imports: []
      circuits: {}
      global_consts: {}
      functions:
        "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: [u8; 3]) -> bool {\\\"}\"}":
          annotations: []
          identifier: "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: [u8; 3]) -> bool {\\\"}\"}"
          input:
            - Variable:
                identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":15,\\\"col_stop\\\":16,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: [u8; 3]) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  Array:
                    - IntegerType: U8
                    - - value: "3"
                span:
                  line_start: 4
                  line_stop: 4
                  col_start: 15
                  col_stop: 16
                  path: compiler-test
                  content: "function main(a: [u8; 3]) -> bool {"
          output: Boolean
          block:
            statements:
              - Definition:
                  declaration_type: Const
                  variable_names:
                    - mutable: false
                      identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":5,\\\"line_stop\\\":5,\\\"col_start\\\":11,\\\"col_stop\\\":12,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    const b = [1u8; 4];\\\"}\"}"
                      span:
                        line_start: 5
                        line_stop: 5
                        col_start: 11
                        col_stop: 12
                        path: compiler-test
                        content: "    const b = [1u8; 4];"
                  type_: ~
                  value:
                    ArrayInit:
                      element:
                        Value:
                          Integer:
                            - U8
                            - "1"
                            - line_start: 5
                              line_stop: 5
                              col_start: 16
                              col_stop: 19
                              path: compiler-test
                              content: "    const b = [1u8; 4];"
                      dimensions:
                        - value: "4"
                      span:
                        line_start: 5
                        line_stop: 5
                        col_start: 15
                        col_stop: 23
                        path: compiler-test
                        content: "    const b = [1u8; 4];"
                  span:
                    line_start: 5
                    line_stop: 5
                    col_start: 5
                    col_stop: 23
                    path: compiler-test
                    content: "    const b = [1u8; 4];"
              - Return:
                  expression:
                    Binary:
                      left:
                        Identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":6,\\\"line_stop\\\":6,\\\"col_start\\\":12,\\\"col_stop\\\":13,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return a == b[0..3];\\\"}\"}"
                      right:
                        ArrayRangeAccess:
                          array:
                            Identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":6,\\\"line_stop\\\":6,\\\"col_start\\\":17,\\\"col_stop\\\":18,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return a == b[0..3];\\\"}\"}"
                          left:
                            Value:
                              Implicit:
                                - "0"
                                - line_start: 6
                                  line_stop: 6
                                  col_start: 19
                                  col_stop: 20
                                  path: compiler-test
                                  content: "    return a == b[0..3];"
                          right:
                            Value:
                              Implicit:
                                - "3"
                                - line_start: 6
                                  line_stop: 6
                                  col_start: 22
                                  col_stop: 23
                                  path: compiler-test
                                  content: "    return a == b[0..3];"
                          span:
                            line_start: 6
                            line_stop: 6
                            col_start: 17
                            col_stop: 24
                            path: compiler-test
                            content: "    return a == b[0..3];"
                      op: Eq
                      span:
                        line_start: 6
                        line_stop: 6
                        col_start: 12
                        col_stop: 24
                        path: compiler-test
                        content: "    return a == b[0..3];"
                  span:
                    line_start: 6
                    line_stop: 6
                    col_start: 5
                    col_stop: 24
                    path: compiler-test
                    content: "    return a == b[0..3];"
            span:
              line_start: 4
              line_stop: 7
              col_start: 35
              col_stop: 2
              path: compiler-test
              content: "function main(a: [u8; 3]) -> bool {\n...\n}"
          span:
            line_start: 4
            line_stop: 7
            col_start: 1
            col_stop: 2
            path: compiler-test
            content: "function main(a: [u8; 3]) -> bool {\n...\n}\n"
    type_inferenced_theorem:
      name: test
      expected_input: []
      imports: []
      circuits: {}
      global_consts: {}
      functions:
        "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: [u8; 3]) -> bool {\\\"}\"}":
          annotations: []
          identifier: "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: [u8; 3]) -> bool {\\\"}\"}"
          input:
            - Variable:
                identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":15,\\\"col_stop\\\":16,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: [u8; 3]) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  Array:
                    - IntegerType: U8
                    - - value: "3"
                span:
                  line_start: 4
                  line_stop: 4
                  col_start: 15
                  col_stop: 16
                  path: compiler-test
                  content: "function main(a: [u8; 3]) -> bool {"
          output: Boolean
          block:
            statements:
              - Definition:
                  declaration_type: Const
                  variable_names:
                    - mutable: false
                      identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":5,\\\"line_stop\\\":5,\\\"col_start\\\":11,\\\"col_stop\\\":12,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    const b = [1u8; 4];\\\"}\"}"
                      span:
                        line_start: 5
                        line_stop: 5
                        col_start: 11
                        col_stop: 12
                        path: compiler-test
                        content: "    const b = [1u8; 4];"
                  type_:
                    Array:
                      - IntegerType: U8
                      - - value: "4"
                  value:
                    ArrayInit:
                      element:
                        Value:
                          Integer:
                            - U8
                            - "1"
                            - line_start: 5
                              line_stop: 5
                              col_start: 16
                              col_stop: 19
                              path: compiler-test
                              content: "    const b = [1u8; 4];"
                      dimensions:
                        - value: "4"
                      span:
                        line_start: 5
                        line_stop: 5
                        col_start: 15
                        col_stop: 23
                        path: compiler-test
                        content: "    const b = [1u8; 4];"
                  span:
                    line_start: 5
                    line_stop: 5
                    col_start: 5
                    col_stop: 23
                    path: compiler-test
                    content: "    const b = [1u8; 4];"
              - Return:
                  expression:
                    Binary:
                      left:
                        Identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":6,\\\"line_stop\\\":6,\\\"col_start\\\":12,\\\"col_stop\\\":13,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return a == b[0..3];\\\"}\"}"
                      right:
                        ArrayRangeAccess:
                          array:
                            Identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":6,\\\"line_stop\\\":6,\\\"col_start\\\":17,\\\"col_stop\\\":18,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return a == b[0..3];\\\"}\"}"
                          left:
                            Value:
                              Integer:
                                - U32
                                - "0"
                                - line_start: 6
                                  line_stop: 6
                                  col_start: 19
                                  col_stop: 20
                                  path: compiler-test
                                  content: "    return a == b[0..3];"
                          right:
                            Value:
                              Integer:
                                - U32
                                - "3"
                                - line_start: 6
                                  line_stop: 6
                                  col_start: 22
                                  col_stop: 23
                                  path: compiler-test
                                  content: "    return a == b[0..3];"
                          span:
                            line_start: 6
                            line_stop: 6
                            col_start: 17
                            col_stop: 24
                            path: compiler-test
                            content: "    return a == b[0..3];"
                      op: Eq
                      span:
                        line_start: 6
                        line_stop: 6
                        col_start: 12
                        col_stop: 24
                        path: compiler-test
                        content: "    return a == b[0..3];"
                  span:
                    line_start: 6
                    line_stop: 6
                    col_start: 5
                    col_stop: 24
                    path: compiler-test
                    content: "    return a == b[0..3];"
            span:
              line_start: 4
              line_stop: 7
              col_start: 35
              col_stop: 2
              path: compiler-test
              content: "function main(a: [u8; 3]) -> bool {\n...\n}"
          span:
            line_start: 4
            line_stop: 7
            col_start: 1
            col_stop: 2
            path: compiler-test
            content: "function main(a: [u8; 3]) -> bool {\n...\n}\n"
