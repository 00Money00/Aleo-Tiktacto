---
namespace: Compile
expectation: Pass
outputs:
  - circuit:
      num_public_variables: 0
      num_private_variables: 64
      num_constraints: 64
      at: 2517dbbd3bc6f74f73a279bfe223141cdef8fce801edcc2972d568a815e43bcd
      bt: 3a136bbbffaef5f4563e06a03444cfe5c512767d8c88a8be5b39034e18fe0081
      ct: 60e36dc4bc844fe8285371cf70c955b79990f094bc50b3401dcac4cbede63e8d
    output:
      - input_file: input/integers.in
        output:
          registers:
            a:
              type: u32
              value: "0"
            b:
              type: u32
              value: "0"
    initial_theorem:
      name: ""
      expected_input: []
      imports: []
      circuits: {}
      global_consts: {}
      functions:
        "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(\\\"}\"}":
          annotations: []
          identifier: "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(\\\"}\"}"
          input:
            - Variable:
                identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":5,\\\"col_stop\\\":6,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    a: u32,\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: U32
                span:
                  line_start: 4
                  line_stop: 4
                  col_start: 5
                  col_stop: 6
                  path: compiler-test
                  content: "    a: u32,"
            - Variable:
                identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":5,\\\"line_stop\\\":5,\\\"col_start\\\":5,\\\"col_stop\\\":6,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    b: u32,\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: U32
                span:
                  line_start: 5
                  line_stop: 5
                  col_start: 5
                  col_stop: 6
                  path: compiler-test
                  content: "    b: u32,"
          output:
            Tuple:
              - IntegerType: U32
              - IntegerType: U32
          block:
            statements:
              - Return:
                  expression:
                    TupleInit:
                      elements:
                        - Identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":10,\\\"line_stop\\\":10,\\\"col_start\\\":13,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return (a, b);\\\"}\"}"
                        - Identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":10,\\\"line_stop\\\":10,\\\"col_start\\\":16,\\\"col_stop\\\":17,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return (a, b);\\\"}\"}"
                      span:
                        line_start: 10
                        line_stop: 10
                        col_start: 12
                        col_stop: 18
                        path: compiler-test
                        content: "    return (a, b);"
                  span:
                    line_start: 10
                    line_stop: 10
                    col_start: 5
                    col_stop: 18
                    path: compiler-test
                    content: "    return (a, b);"
            span:
              line_start: 9
              line_stop: 11
              col_start: 3
              col_stop: 2
              path: compiler-test
              content: ") {\n...\n}"
          span:
            line_start: 3
            line_stop: 11
            col_start: 1
            col_stop: 2
            path: compiler-test
            content: "function main(\n...\n) {\n...\n}"
    canonicalized_theorem:
      name: ""
      expected_input: []
      imports: []
      circuits: {}
      global_consts: {}
      functions:
        "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(\\\"}\"}":
          annotations: []
          identifier: "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(\\\"}\"}"
          input:
            - Variable:
                identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":5,\\\"col_stop\\\":6,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    a: u32,\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: U32
                span:
                  line_start: 4
                  line_stop: 4
                  col_start: 5
                  col_stop: 6
                  path: compiler-test
                  content: "    a: u32,"
            - Variable:
                identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":5,\\\"line_stop\\\":5,\\\"col_start\\\":5,\\\"col_stop\\\":6,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    b: u32,\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: U32
                span:
                  line_start: 5
                  line_stop: 5
                  col_start: 5
                  col_stop: 6
                  path: compiler-test
                  content: "    b: u32,"
          output:
            Tuple:
              - IntegerType: U32
              - IntegerType: U32
          block:
            statements:
              - Return:
                  expression:
                    TupleInit:
                      elements:
                        - Identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":10,\\\"line_stop\\\":10,\\\"col_start\\\":13,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return (a, b);\\\"}\"}"
                        - Identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":10,\\\"line_stop\\\":10,\\\"col_start\\\":16,\\\"col_stop\\\":17,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return (a, b);\\\"}\"}"
                      span:
                        line_start: 10
                        line_stop: 10
                        col_start: 12
                        col_stop: 18
                        path: compiler-test
                        content: "    return (a, b);"
                  span:
                    line_start: 10
                    line_stop: 10
                    col_start: 5
                    col_stop: 18
                    path: compiler-test
                    content: "    return (a, b);"
            span:
              line_start: 9
              line_stop: 11
              col_start: 3
              col_stop: 2
              path: compiler-test
              content: ") {\n...\n}"
          span:
            line_start: 3
            line_stop: 11
            col_start: 1
            col_stop: 2
            path: compiler-test
            content: "function main(\n...\n) {\n...\n}"
    type_inferenced_theorem:
      name: test
      expected_input: []
      imports: []
      circuits: {}
      global_consts: {}
      functions:
        "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(\\\"}\"}":
          annotations: []
          identifier: "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(\\\"}\"}"
          input:
            - Variable:
                identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":5,\\\"col_stop\\\":6,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    a: u32,\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: U32
                span:
                  line_start: 4
                  line_stop: 4
                  col_start: 5
                  col_stop: 6
                  path: compiler-test
                  content: "    a: u32,"
            - Variable:
                identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":5,\\\"line_stop\\\":5,\\\"col_start\\\":5,\\\"col_stop\\\":6,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    b: u32,\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: U32
                span:
                  line_start: 5
                  line_stop: 5
                  col_start: 5
                  col_stop: 6
                  path: compiler-test
                  content: "    b: u32,"
          output:
            Tuple:
              - IntegerType: U32
              - IntegerType: U32
          block:
            statements:
              - Return:
                  expression:
                    TupleInit:
                      elements:
                        - Identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":10,\\\"line_stop\\\":10,\\\"col_start\\\":13,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return (a, b);\\\"}\"}"
                        - Identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":10,\\\"line_stop\\\":10,\\\"col_start\\\":16,\\\"col_stop\\\":17,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return (a, b);\\\"}\"}"
                      span:
                        line_start: 10
                        line_stop: 10
                        col_start: 12
                        col_stop: 18
                        path: compiler-test
                        content: "    return (a, b);"
                  span:
                    line_start: 10
                    line_stop: 10
                    col_start: 5
                    col_stop: 18
                    path: compiler-test
                    content: "    return (a, b);"
            span:
              line_start: 9
              line_stop: 11
              col_start: 3
              col_stop: 2
              path: compiler-test
              content: ") {\n...\n}"
          span:
            line_start: 3
            line_stop: 11
            col_start: 1
            col_stop: 2
            path: compiler-test
            content: "function main(\n...\n) {\n...\n}"
