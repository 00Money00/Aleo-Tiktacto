---
namespace: Compile
expectation: Pass
outputs:
  - circuit:
      num_public_variables: 0
      num_private_variables: 1
      num_constraints: 1
      at: 042610d0fd1fe6d6ac112138f8755752f44c7d2a00f1b5960574d6da5cda393f
      bt: e97756698880ab7555a959a5fb5c6b4e15bd64612aa677adbfe2d0bd91f0a83c
      ct: cf1cbb66a638b4860a516671fb74850e6ccf787fe6c4c8d29e9c04efe880bd05
    output:
      - input_file: input/dummy.in
        output:
          registers:
            r0:
              type: bool
              value: "true"
    initial_theorem:
      name: ""
      expected_input: []
      imports: []
      circuits: {}
      global_consts: {}
      functions:
        "{\"name\":\"one\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":13,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function one() -> u32 {\\\"}\"}":
          annotations: []
          identifier: "{\"name\":\"one\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":13,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function one() -> u32 {\\\"}\"}"
          input: []
          output:
            IntegerType: U32
          block:
            statements:
              - Return:
                  expression:
                    Value:
                      Integer:
                        - U32
                        - "1"
                        - line_start: 4
                          line_stop: 4
                          col_start: 12
                          col_stop: 16
                          path: compiler-test
                          content: "    return 1u32;"
                  span:
                    line_start: 4
                    line_stop: 4
                    col_start: 5
                    col_stop: 16
                    path: compiler-test
                    content: "    return 1u32;"
            span:
              line_start: 3
              line_stop: 5
              col_start: 23
              col_stop: 2
              path: compiler-test
              content: "function one() -> u32 {\n...\n}"
          span:
            line_start: 3
            line_stop: 5
            col_start: 1
            col_stop: 2
            path: compiler-test
            content: "function one() -> u32 {\n...\n}"
        "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":7,\\\"line_stop\\\":7,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(y: bool) -> bool {\\\"}\"}":
          annotations: []
          identifier: "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":7,\\\"line_stop\\\":7,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(y: bool) -> bool {\\\"}\"}"
          input:
            - Variable:
                identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":7,\\\"line_stop\\\":7,\\\"col_start\\\":15,\\\"col_stop\\\":16,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(y: bool) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_: Boolean
                span:
                  line_start: 7
                  line_stop: 7
                  col_start: 15
                  col_stop: 16
                  path: compiler-test
                  content: "function main(y: bool) -> bool {"
          output: Boolean
          block:
            statements:
              - Return:
                  expression:
                    Binary:
                      left:
                        Binary:
                          left:
                            Call:
                              function:
                                Identifier: "{\"name\":\"one\",\"span\":\"{\\\"line_start\\\":8,\\\"line_stop\\\":8,\\\"col_start\\\":12,\\\"col_stop\\\":15,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return one() == 1u32 == y;\\\"}\"}"
                              arguments: []
                              span:
                                line_start: 8
                                line_stop: 8
                                col_start: 12
                                col_stop: 17
                                path: compiler-test
                                content: "    return one() == 1u32 == y;"
                          right:
                            Value:
                              Integer:
                                - U32
                                - "1"
                                - line_start: 8
                                  line_stop: 8
                                  col_start: 21
                                  col_stop: 25
                                  path: compiler-test
                                  content: "    return one() == 1u32 == y;"
                          op: Eq
                          span:
                            line_start: 8
                            line_stop: 8
                            col_start: 12
                            col_stop: 25
                            path: compiler-test
                            content: "    return one() == 1u32 == y;"
                      right:
                        Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":8,\\\"line_stop\\\":8,\\\"col_start\\\":29,\\\"col_stop\\\":30,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return one() == 1u32 == y;\\\"}\"}"
                      op: Eq
                      span:
                        line_start: 8
                        line_stop: 8
                        col_start: 12
                        col_stop: 30
                        path: compiler-test
                        content: "    return one() == 1u32 == y;"
                  span:
                    line_start: 8
                    line_stop: 8
                    col_start: 5
                    col_stop: 30
                    path: compiler-test
                    content: "    return one() == 1u32 == y;"
            span:
              line_start: 7
              line_stop: 9
              col_start: 32
              col_stop: 2
              path: compiler-test
              content: "function main(y: bool) -> bool {\n...\n}"
          span:
            line_start: 7
            line_stop: 9
            col_start: 1
            col_stop: 2
            path: compiler-test
            content: "function main(y: bool) -> bool {\n...\n}"
    canonicalized_theorem:
      name: ""
      expected_input: []
      imports: []
      circuits: {}
      global_consts: {}
      functions:
        "{\"name\":\"one\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":13,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function one() -> u32 {\\\"}\"}":
          annotations: []
          identifier: "{\"name\":\"one\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":13,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function one() -> u32 {\\\"}\"}"
          input: []
          output:
            IntegerType: U32
          block:
            statements:
              - Return:
                  expression:
                    Value:
                      Integer:
                        - U32
                        - "1"
                        - line_start: 4
                          line_stop: 4
                          col_start: 12
                          col_stop: 16
                          path: compiler-test
                          content: "    return 1u32;"
                  span:
                    line_start: 4
                    line_stop: 4
                    col_start: 5
                    col_stop: 16
                    path: compiler-test
                    content: "    return 1u32;"
            span:
              line_start: 3
              line_stop: 5
              col_start: 23
              col_stop: 2
              path: compiler-test
              content: "function one() -> u32 {\n...\n}"
          span:
            line_start: 3
            line_stop: 5
            col_start: 1
            col_stop: 2
            path: compiler-test
            content: "function one() -> u32 {\n...\n}"
        "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":7,\\\"line_stop\\\":7,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(y: bool) -> bool {\\\"}\"}":
          annotations: []
          identifier: "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":7,\\\"line_stop\\\":7,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(y: bool) -> bool {\\\"}\"}"
          input:
            - Variable:
                identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":7,\\\"line_stop\\\":7,\\\"col_start\\\":15,\\\"col_stop\\\":16,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(y: bool) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_: Boolean
                span:
                  line_start: 7
                  line_stop: 7
                  col_start: 15
                  col_stop: 16
                  path: compiler-test
                  content: "function main(y: bool) -> bool {"
          output: Boolean
          block:
            statements:
              - Return:
                  expression:
                    Binary:
                      left:
                        Binary:
                          left:
                            Call:
                              function:
                                Identifier: "{\"name\":\"one\",\"span\":\"{\\\"line_start\\\":8,\\\"line_stop\\\":8,\\\"col_start\\\":12,\\\"col_stop\\\":15,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return one() == 1u32 == y;\\\"}\"}"
                              arguments: []
                              span:
                                line_start: 8
                                line_stop: 8
                                col_start: 12
                                col_stop: 17
                                path: compiler-test
                                content: "    return one() == 1u32 == y;"
                          right:
                            Value:
                              Integer:
                                - U32
                                - "1"
                                - line_start: 8
                                  line_stop: 8
                                  col_start: 21
                                  col_stop: 25
                                  path: compiler-test
                                  content: "    return one() == 1u32 == y;"
                          op: Eq
                          span:
                            line_start: 8
                            line_stop: 8
                            col_start: 12
                            col_stop: 25
                            path: compiler-test
                            content: "    return one() == 1u32 == y;"
                      right:
                        Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":8,\\\"line_stop\\\":8,\\\"col_start\\\":29,\\\"col_stop\\\":30,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return one() == 1u32 == y;\\\"}\"}"
                      op: Eq
                      span:
                        line_start: 8
                        line_stop: 8
                        col_start: 12
                        col_stop: 30
                        path: compiler-test
                        content: "    return one() == 1u32 == y;"
                  span:
                    line_start: 8
                    line_stop: 8
                    col_start: 5
                    col_stop: 30
                    path: compiler-test
                    content: "    return one() == 1u32 == y;"
            span:
              line_start: 7
              line_stop: 9
              col_start: 32
              col_stop: 2
              path: compiler-test
              content: "function main(y: bool) -> bool {\n...\n}"
          span:
            line_start: 7
            line_stop: 9
            col_start: 1
            col_stop: 2
            path: compiler-test
            content: "function main(y: bool) -> bool {\n...\n}"
    type_inferenced_theorem:
      name: test
      expected_input: []
      imports: []
      circuits: {}
      global_consts: {}
      functions:
        "{\"name\":\"one\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":13,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function one() -> u32 {\\\"}\"}":
          annotations: []
          identifier: "{\"name\":\"one\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":13,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function one() -> u32 {\\\"}\"}"
          input: []
          output:
            IntegerType: U32
          block:
            statements:
              - Return:
                  expression:
                    Value:
                      Integer:
                        - U32
                        - "1"
                        - line_start: 4
                          line_stop: 4
                          col_start: 12
                          col_stop: 16
                          path: compiler-test
                          content: "    return 1u32;"
                  span:
                    line_start: 4
                    line_stop: 4
                    col_start: 5
                    col_stop: 16
                    path: compiler-test
                    content: "    return 1u32;"
            span:
              line_start: 3
              line_stop: 5
              col_start: 23
              col_stop: 2
              path: compiler-test
              content: "function one() -> u32 {\n...\n}"
          span:
            line_start: 3
            line_stop: 5
            col_start: 1
            col_stop: 2
            path: compiler-test
            content: "function one() -> u32 {\n...\n}"
        "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":7,\\\"line_stop\\\":7,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(y: bool) -> bool {\\\"}\"}":
          annotations: []
          identifier: "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":7,\\\"line_stop\\\":7,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(y: bool) -> bool {\\\"}\"}"
          input:
            - Variable:
                identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":7,\\\"line_stop\\\":7,\\\"col_start\\\":15,\\\"col_stop\\\":16,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(y: bool) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_: Boolean
                span:
                  line_start: 7
                  line_stop: 7
                  col_start: 15
                  col_stop: 16
                  path: compiler-test
                  content: "function main(y: bool) -> bool {"
          output: Boolean
          block:
            statements:
              - Return:
                  expression:
                    Binary:
                      left:
                        Binary:
                          left:
                            Call:
                              function:
                                Identifier: "{\"name\":\"one\",\"span\":\"{\\\"line_start\\\":8,\\\"line_stop\\\":8,\\\"col_start\\\":12,\\\"col_stop\\\":15,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return one() == 1u32 == y;\\\"}\"}"
                              arguments: []
                              span:
                                line_start: 8
                                line_stop: 8
                                col_start: 12
                                col_stop: 17
                                path: compiler-test
                                content: "    return one() == 1u32 == y;"
                          right:
                            Value:
                              Integer:
                                - U32
                                - "1"
                                - line_start: 8
                                  line_stop: 8
                                  col_start: 21
                                  col_stop: 25
                                  path: compiler-test
                                  content: "    return one() == 1u32 == y;"
                          op: Eq
                          span:
                            line_start: 8
                            line_stop: 8
                            col_start: 12
                            col_stop: 25
                            path: compiler-test
                            content: "    return one() == 1u32 == y;"
                      right:
                        Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":8,\\\"line_stop\\\":8,\\\"col_start\\\":29,\\\"col_stop\\\":30,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return one() == 1u32 == y;\\\"}\"}"
                      op: Eq
                      span:
                        line_start: 8
                        line_stop: 8
                        col_start: 12
                        col_stop: 30
                        path: compiler-test
                        content: "    return one() == 1u32 == y;"
                  span:
                    line_start: 8
                    line_stop: 8
                    col_start: 5
                    col_stop: 30
                    path: compiler-test
                    content: "    return one() == 1u32 == y;"
            span:
              line_start: 7
              line_stop: 9
              col_start: 32
              col_stop: 2
              path: compiler-test
              content: "function main(y: bool) -> bool {\n...\n}"
          span:
            line_start: 7
            line_stop: 9
            col_start: 1
            col_stop: 2
            path: compiler-test
            content: "function main(y: bool) -> bool {\n...\n}"
