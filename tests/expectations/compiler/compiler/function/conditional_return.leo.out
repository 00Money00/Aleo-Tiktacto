---
namespace: Compile
expectation: Pass
outputs:
  - circuit:
      num_public_variables: 0
      num_private_variables: 95
      num_constraints: 127
      at: 2cbb45563950440ec6b2ad12e378f1df49d6a12d4e773f0aa898f65f4eb109ff
      bt: 7e12153373f45abf58e3b2954d1f1abfc951c7c1203e9e6c96fc37d9d25d8442
      ct: 50977b6cd45450d9fddf5934d9167f889165f6ff117b03bb780bd6d89434daf4
    output:
      - input_file: input/integers.in
        output:
          registers:
            a:
              type: u32
              value: "4"
    initial_theorem:
      name: ""
      expected_input: []
      imports: []
      circuits: {}
      global_consts: {}
      functions:
        "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: u32) -> u32 {\\\"}\"}":
          annotations: []
          identifier: "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: u32) -> u32 {\\\"}\"}"
          input:
            - Variable:
                identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":15,\\\"col_stop\\\":16,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: u32) -> u32 {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: U32
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 15
                  col_stop: 16
                  path: compiler-test
                  content: "function main(a: u32) -> u32 {"
          output:
            IntegerType: U32
          block:
            statements:
              - Conditional:
                  condition:
                    Binary:
                      left:
                        Identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":8,\\\"col_stop\\\":9,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    if a == 2u32 {\\\"}\"}"
                      right:
                        Value:
                          Integer:
                            - U32
                            - "2"
                            - line_start: 4
                              line_stop: 4
                              col_start: 13
                              col_stop: 17
                              path: compiler-test
                              content: "    if a == 2u32 {"
                      op: Eq
                      span:
                        line_start: 4
                        line_stop: 4
                        col_start: 8
                        col_stop: 17
                        path: compiler-test
                        content: "    if a == 2u32 {"
                  block:
                    statements:
                      - Return:
                          expression:
                            Value:
                              Integer:
                                - U32
                                - "3"
                                - line_start: 5
                                  line_stop: 5
                                  col_start: 16
                                  col_stop: 20
                                  path: compiler-test
                                  content: "        return 3u32;"
                          span:
                            line_start: 5
                            line_stop: 5
                            col_start: 9
                            col_stop: 20
                            path: compiler-test
                            content: "        return 3u32;"
                    span:
                      line_start: 4
                      line_stop: 6
                      col_start: 18
                      col_stop: 6
                      path: compiler-test
                      content: "    if a == 2u32 {\n...\n    } else {"
                  next:
                    Block:
                      statements:
                        - Return:
                            expression:
                              Value:
                                Integer:
                                  - U32
                                  - "4"
                                  - line_start: 7
                                    line_stop: 7
                                    col_start: 16
                                    col_stop: 20
                                    path: compiler-test
                                    content: "        return 4u32;"
                            span:
                              line_start: 7
                              line_stop: 7
                              col_start: 9
                              col_stop: 20
                              path: compiler-test
                              content: "        return 4u32;"
                      span:
                        line_start: 6
                        line_stop: 8
                        col_start: 12
                        col_stop: 6
                        path: compiler-test
                        content: "    } else {\n...\n    } "
                  span:
                    line_start: 4
                    line_stop: 8
                    col_start: 5
                    col_stop: 6
                    path: compiler-test
                    content: "    if a == 2u32 {\n...\n    } else {\n...\n    } "
            span:
              line_start: 3
              line_stop: 9
              col_start: 30
              col_stop: 2
              path: compiler-test
              content: "function main(a: u32) -> u32 {\n...\n}"
          span:
            line_start: 3
            line_stop: 9
            col_start: 1
            col_stop: 2
            path: compiler-test
            content: "function main(a: u32) -> u32 {\n...\n}\n\n\n\n"
    canonicalized_theorem:
      name: ""
      expected_input: []
      imports: []
      circuits: {}
      global_consts: {}
      functions:
        "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: u32) -> u32 {\\\"}\"}":
          annotations: []
          identifier: "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: u32) -> u32 {\\\"}\"}"
          input:
            - Variable:
                identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":15,\\\"col_stop\\\":16,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: u32) -> u32 {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: U32
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 15
                  col_stop: 16
                  path: compiler-test
                  content: "function main(a: u32) -> u32 {"
          output:
            IntegerType: U32
          block:
            statements:
              - Conditional:
                  condition:
                    Binary:
                      left:
                        Identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":8,\\\"col_stop\\\":9,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    if a == 2u32 {\\\"}\"}"
                      right:
                        Value:
                          Integer:
                            - U32
                            - "2"
                            - line_start: 4
                              line_stop: 4
                              col_start: 13
                              col_stop: 17
                              path: compiler-test
                              content: "    if a == 2u32 {"
                      op: Eq
                      span:
                        line_start: 4
                        line_stop: 4
                        col_start: 8
                        col_stop: 17
                        path: compiler-test
                        content: "    if a == 2u32 {"
                  block:
                    statements:
                      - Return:
                          expression:
                            Value:
                              Integer:
                                - U32
                                - "3"
                                - line_start: 5
                                  line_stop: 5
                                  col_start: 16
                                  col_stop: 20
                                  path: compiler-test
                                  content: "        return 3u32;"
                          span:
                            line_start: 5
                            line_stop: 5
                            col_start: 9
                            col_stop: 20
                            path: compiler-test
                            content: "        return 3u32;"
                    span:
                      line_start: 4
                      line_stop: 6
                      col_start: 18
                      col_stop: 6
                      path: compiler-test
                      content: "    if a == 2u32 {\n...\n    } else {"
                  next:
                    Block:
                      statements:
                        - Return:
                            expression:
                              Value:
                                Integer:
                                  - U32
                                  - "4"
                                  - line_start: 7
                                    line_stop: 7
                                    col_start: 16
                                    col_stop: 20
                                    path: compiler-test
                                    content: "        return 4u32;"
                            span:
                              line_start: 7
                              line_stop: 7
                              col_start: 9
                              col_stop: 20
                              path: compiler-test
                              content: "        return 4u32;"
                      span:
                        line_start: 6
                        line_stop: 8
                        col_start: 12
                        col_stop: 6
                        path: compiler-test
                        content: "    } else {\n...\n    } "
                  span:
                    line_start: 4
                    line_stop: 8
                    col_start: 5
                    col_stop: 6
                    path: compiler-test
                    content: "    if a == 2u32 {\n...\n    } else {\n...\n    } "
            span:
              line_start: 3
              line_stop: 9
              col_start: 30
              col_stop: 2
              path: compiler-test
              content: "function main(a: u32) -> u32 {\n...\n}"
          span:
            line_start: 3
            line_stop: 9
            col_start: 1
            col_stop: 2
            path: compiler-test
            content: "function main(a: u32) -> u32 {\n...\n}\n\n\n\n"
    type_inferenced_theorem:
      name: test
      expected_input: []
      imports: []
      circuits: {}
      global_consts: {}
      functions:
        "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: u32) -> u32 {\\\"}\"}":
          annotations: []
          identifier: "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: u32) -> u32 {\\\"}\"}"
          input:
            - Variable:
                identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":3,\\\"line_stop\\\":3,\\\"col_start\\\":15,\\\"col_stop\\\":16,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: u32) -> u32 {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: U32
                span:
                  line_start: 3
                  line_stop: 3
                  col_start: 15
                  col_stop: 16
                  path: compiler-test
                  content: "function main(a: u32) -> u32 {"
          output:
            IntegerType: U32
          block:
            statements:
              - Conditional:
                  condition:
                    Binary:
                      left:
                        Identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":8,\\\"col_stop\\\":9,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    if a == 2u32 {\\\"}\"}"
                      right:
                        Value:
                          Integer:
                            - U32
                            - "2"
                            - line_start: 4
                              line_stop: 4
                              col_start: 13
                              col_stop: 17
                              path: compiler-test
                              content: "    if a == 2u32 {"
                      op: Eq
                      span:
                        line_start: 4
                        line_stop: 4
                        col_start: 8
                        col_stop: 17
                        path: compiler-test
                        content: "    if a == 2u32 {"
                  block:
                    statements:
                      - Return:
                          expression:
                            Value:
                              Integer:
                                - U32
                                - "3"
                                - line_start: 5
                                  line_stop: 5
                                  col_start: 16
                                  col_stop: 20
                                  path: compiler-test
                                  content: "        return 3u32;"
                          span:
                            line_start: 5
                            line_stop: 5
                            col_start: 9
                            col_stop: 20
                            path: compiler-test
                            content: "        return 3u32;"
                    span:
                      line_start: 4
                      line_stop: 6
                      col_start: 18
                      col_stop: 6
                      path: compiler-test
                      content: "    if a == 2u32 {\n...\n    } else {"
                  next:
                    Block:
                      statements:
                        - Return:
                            expression:
                              Value:
                                Integer:
                                  - U32
                                  - "4"
                                  - line_start: 7
                                    line_stop: 7
                                    col_start: 16
                                    col_stop: 20
                                    path: compiler-test
                                    content: "        return 4u32;"
                            span:
                              line_start: 7
                              line_stop: 7
                              col_start: 9
                              col_stop: 20
                              path: compiler-test
                              content: "        return 4u32;"
                      span:
                        line_start: 6
                        line_stop: 8
                        col_start: 12
                        col_stop: 6
                        path: compiler-test
                        content: "    } else {\n...\n    } "
                  span:
                    line_start: 4
                    line_stop: 8
                    col_start: 5
                    col_stop: 6
                    path: compiler-test
                    content: "    if a == 2u32 {\n...\n    } else {\n...\n    } "
            span:
              line_start: 3
              line_stop: 9
              col_start: 30
              col_stop: 2
              path: compiler-test
              content: "function main(a: u32) -> u32 {\n...\n}"
          span:
            line_start: 3
            line_stop: 9
            col_start: 1
            col_stop: 2
            path: compiler-test
            content: "function main(a: u32) -> u32 {\n...\n}\n\n\n\n"
