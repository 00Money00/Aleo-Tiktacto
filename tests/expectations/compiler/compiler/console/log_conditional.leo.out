---
namespace: Compile
expectation: Pass
outputs:
  - circuit:
      num_public_variables: 0
      num_private_variables: 190
      num_constraints: 190
      at: a1a80b7c355e1fa32c2136c4dc7a0fd0670affbdda869a9161a3a69f396c6b9a
      bt: fbf306d0d13bf3d40926ad7adc07f122cb8d065e7e5d55f3416ac30d7ebe7a7c
      ct: 97e2acff1b76912c52107342393ec04a09af81353a25f7ce330b8492f41381cf
    output:
      - input_file: input/input_unequal.in
        output:
          registers:
            r0:
              type: bool
              value: "false"
      - input_file: input/input_equal.in
        output:
          registers:
            r0:
              type: bool
              value: "true"
    initial_theorem:
      name: ""
      expected_input: []
      imports: []
      circuits: {}
      global_consts: {}
      functions:
        "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: u32, b: u32) -> bool {\\\"}\"}":
          annotations: []
          identifier: "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: u32, b: u32) -> bool {\\\"}\"}"
          input:
            - Variable:
                identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":15,\\\"col_stop\\\":16,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: u32, b: u32) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: U32
                span:
                  line_start: 4
                  line_stop: 4
                  col_start: 15
                  col_stop: 16
                  path: compiler-test
                  content: "function main(a: u32, b: u32) -> bool {"
            - Variable:
                identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":23,\\\"col_stop\\\":24,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: u32, b: u32) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: U32
                span:
                  line_start: 4
                  line_stop: 4
                  col_start: 23
                  col_stop: 24
                  path: compiler-test
                  content: "function main(a: u32, b: u32) -> bool {"
          output: Boolean
          block:
            statements:
              - Conditional:
                  condition:
                    Binary:
                      left:
                        Identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":5,\\\"line_stop\\\":5,\\\"col_start\\\":8,\\\"col_stop\\\":9,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    if a == b {\\\"}\"}"
                      right:
                        Identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":5,\\\"line_stop\\\":5,\\\"col_start\\\":13,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    if a == b {\\\"}\"}"
                      op: Eq
                      span:
                        line_start: 5
                        line_stop: 5
                        col_start: 8
                        col_stop: 14
                        path: compiler-test
                        content: "    if a == b {"
                  block:
                    statements:
                      - Console:
                          function:
                            Log:
                              parts:
                                - Const: ""
                                - Container
                                - Const: "=="
                                - Container
                              parameters:
                                - Identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":6,\\\"line_stop\\\":6,\\\"col_start\\\":31,\\\"col_stop\\\":32,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"        console.log(\\\\\\\"{}=={}\\\\\\\", a, b); // This line should not fail.\\\"}\"}"
                                - Identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":6,\\\"line_stop\\\":6,\\\"col_start\\\":34,\\\"col_stop\\\":35,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"        console.log(\\\\\\\"{}=={}\\\\\\\", a, b); // This line should not fail.\\\"}\"}"
                              span:
                                line_start: 6
                                line_stop: 6
                                col_start: 21
                                col_stop: 35
                                path: compiler-test
                                content: "        console.log(\"{}=={}\", a, b); // This line should not fail."
                          span:
                            line_start: 6
                            line_stop: 6
                            col_start: 9
                            col_stop: 35
                            path: compiler-test
                            content: "        console.log(\"{}=={}\", a, b); // This line should not fail."
                    span:
                      line_start: 5
                      line_stop: 7
                      col_start: 15
                      col_stop: 6
                      path: compiler-test
                      content: "    if a == b {\n...\n    }"
                  next: ~
                  span:
                    line_start: 5
                    line_stop: 7
                    col_start: 5
                    col_stop: 6
                    path: compiler-test
                    content: "    if a == b {\n...\n    }"
              - Return:
                  expression:
                    Binary:
                      left:
                        Identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":9,\\\"line_stop\\\":9,\\\"col_start\\\":12,\\\"col_stop\\\":13,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return a == b;\\\"}\"}"
                      right:
                        Identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":9,\\\"line_stop\\\":9,\\\"col_start\\\":17,\\\"col_stop\\\":18,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return a == b;\\\"}\"}"
                      op: Eq
                      span:
                        line_start: 9
                        line_stop: 9
                        col_start: 12
                        col_stop: 18
                        path: compiler-test
                        content: "    return a == b;"
                  span:
                    line_start: 9
                    line_stop: 9
                    col_start: 5
                    col_stop: 18
                    path: compiler-test
                    content: "    return a == b;"
            span:
              line_start: 4
              line_stop: 10
              col_start: 39
              col_stop: 2
              path: compiler-test
              content: "function main(a: u32, b: u32) -> bool {\n...\n}"
          span:
            line_start: 4
            line_stop: 10
            col_start: 1
            col_stop: 2
            path: compiler-test
            content: "function main(a: u32, b: u32) -> bool {\n...\n}\n\n\n\n"
    canonicalized_theorem:
      name: ""
      expected_input: []
      imports: []
      circuits: {}
      global_consts: {}
      functions:
        "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: u32, b: u32) -> bool {\\\"}\"}":
          annotations: []
          identifier: "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: u32, b: u32) -> bool {\\\"}\"}"
          input:
            - Variable:
                identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":15,\\\"col_stop\\\":16,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: u32, b: u32) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: U32
                span:
                  line_start: 4
                  line_stop: 4
                  col_start: 15
                  col_stop: 16
                  path: compiler-test
                  content: "function main(a: u32, b: u32) -> bool {"
            - Variable:
                identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":23,\\\"col_stop\\\":24,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: u32, b: u32) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: U32
                span:
                  line_start: 4
                  line_stop: 4
                  col_start: 23
                  col_stop: 24
                  path: compiler-test
                  content: "function main(a: u32, b: u32) -> bool {"
          output: Boolean
          block:
            statements:
              - Conditional:
                  condition:
                    Binary:
                      left:
                        Identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":5,\\\"line_stop\\\":5,\\\"col_start\\\":8,\\\"col_stop\\\":9,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    if a == b {\\\"}\"}"
                      right:
                        Identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":5,\\\"line_stop\\\":5,\\\"col_start\\\":13,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    if a == b {\\\"}\"}"
                      op: Eq
                      span:
                        line_start: 5
                        line_stop: 5
                        col_start: 8
                        col_stop: 14
                        path: compiler-test
                        content: "    if a == b {"
                  block:
                    statements:
                      - Console:
                          function:
                            Log:
                              parts:
                                - Const: ""
                                - Container
                                - Const: "=="
                                - Container
                              parameters:
                                - Identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":6,\\\"line_stop\\\":6,\\\"col_start\\\":31,\\\"col_stop\\\":32,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"        console.log(\\\\\\\"{}=={}\\\\\\\", a, b); // This line should not fail.\\\"}\"}"
                                - Identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":6,\\\"line_stop\\\":6,\\\"col_start\\\":34,\\\"col_stop\\\":35,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"        console.log(\\\\\\\"{}=={}\\\\\\\", a, b); // This line should not fail.\\\"}\"}"
                              span:
                                line_start: 6
                                line_stop: 6
                                col_start: 21
                                col_stop: 35
                                path: compiler-test
                                content: "        console.log(\"{}=={}\", a, b); // This line should not fail."
                          span:
                            line_start: 6
                            line_stop: 6
                            col_start: 9
                            col_stop: 35
                            path: compiler-test
                            content: "        console.log(\"{}=={}\", a, b); // This line should not fail."
                    span:
                      line_start: 5
                      line_stop: 7
                      col_start: 15
                      col_stop: 6
                      path: compiler-test
                      content: "    if a == b {\n...\n    }"
                  next: ~
                  span:
                    line_start: 5
                    line_stop: 7
                    col_start: 5
                    col_stop: 6
                    path: compiler-test
                    content: "    if a == b {\n...\n    }"
              - Return:
                  expression:
                    Binary:
                      left:
                        Identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":9,\\\"line_stop\\\":9,\\\"col_start\\\":12,\\\"col_stop\\\":13,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return a == b;\\\"}\"}"
                      right:
                        Identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":9,\\\"line_stop\\\":9,\\\"col_start\\\":17,\\\"col_stop\\\":18,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return a == b;\\\"}\"}"
                      op: Eq
                      span:
                        line_start: 9
                        line_stop: 9
                        col_start: 12
                        col_stop: 18
                        path: compiler-test
                        content: "    return a == b;"
                  span:
                    line_start: 9
                    line_stop: 9
                    col_start: 5
                    col_stop: 18
                    path: compiler-test
                    content: "    return a == b;"
            span:
              line_start: 4
              line_stop: 10
              col_start: 39
              col_stop: 2
              path: compiler-test
              content: "function main(a: u32, b: u32) -> bool {\n...\n}"
          span:
            line_start: 4
            line_stop: 10
            col_start: 1
            col_stop: 2
            path: compiler-test
            content: "function main(a: u32, b: u32) -> bool {\n...\n}\n\n\n\n"
    type_inferenced_theorem:
      name: test
      expected_input: []
      imports: []
      circuits: {}
      global_consts: {}
      functions:
        "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: u32, b: u32) -> bool {\\\"}\"}":
          annotations: []
          identifier: "{\"name\":\"main\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":10,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: u32, b: u32) -> bool {\\\"}\"}"
          input:
            - Variable:
                identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":15,\\\"col_stop\\\":16,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: u32, b: u32) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: U32
                span:
                  line_start: 4
                  line_stop: 4
                  col_start: 15
                  col_stop: 16
                  path: compiler-test
                  content: "function main(a: u32, b: u32) -> bool {"
            - Variable:
                identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":4,\\\"line_stop\\\":4,\\\"col_start\\\":23,\\\"col_stop\\\":24,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"function main(a: u32, b: u32) -> bool {\\\"}\"}"
                const_: false
                mutable: true
                type_:
                  IntegerType: U32
                span:
                  line_start: 4
                  line_stop: 4
                  col_start: 23
                  col_stop: 24
                  path: compiler-test
                  content: "function main(a: u32, b: u32) -> bool {"
          output: Boolean
          block:
            statements:
              - Conditional:
                  condition:
                    Binary:
                      left:
                        Identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":5,\\\"line_stop\\\":5,\\\"col_start\\\":8,\\\"col_stop\\\":9,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    if a == b {\\\"}\"}"
                      right:
                        Identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":5,\\\"line_stop\\\":5,\\\"col_start\\\":13,\\\"col_stop\\\":14,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    if a == b {\\\"}\"}"
                      op: Eq
                      span:
                        line_start: 5
                        line_stop: 5
                        col_start: 8
                        col_stop: 14
                        path: compiler-test
                        content: "    if a == b {"
                  block:
                    statements:
                      - Console:
                          function:
                            Log:
                              parts:
                                - Const: ""
                                - Container
                                - Const: "=="
                                - Container
                              parameters:
                                - Identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":6,\\\"line_stop\\\":6,\\\"col_start\\\":31,\\\"col_stop\\\":32,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"        console.log(\\\\\\\"{}=={}\\\\\\\", a, b); // This line should not fail.\\\"}\"}"
                                - Identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":6,\\\"line_stop\\\":6,\\\"col_start\\\":34,\\\"col_stop\\\":35,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"        console.log(\\\\\\\"{}=={}\\\\\\\", a, b); // This line should not fail.\\\"}\"}"
                              span:
                                line_start: 6
                                line_stop: 6
                                col_start: 21
                                col_stop: 35
                                path: compiler-test
                                content: "        console.log(\"{}=={}\", a, b); // This line should not fail."
                          span:
                            line_start: 6
                            line_stop: 6
                            col_start: 9
                            col_stop: 35
                            path: compiler-test
                            content: "        console.log(\"{}=={}\", a, b); // This line should not fail."
                    span:
                      line_start: 5
                      line_stop: 7
                      col_start: 15
                      col_stop: 6
                      path: compiler-test
                      content: "    if a == b {\n...\n    }"
                  next: ~
                  span:
                    line_start: 5
                    line_stop: 7
                    col_start: 5
                    col_stop: 6
                    path: compiler-test
                    content: "    if a == b {\n...\n    }"
              - Return:
                  expression:
                    Binary:
                      left:
                        Identifier: "{\"name\":\"a\",\"span\":\"{\\\"line_start\\\":9,\\\"line_stop\\\":9,\\\"col_start\\\":12,\\\"col_stop\\\":13,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return a == b;\\\"}\"}"
                      right:
                        Identifier: "{\"name\":\"b\",\"span\":\"{\\\"line_start\\\":9,\\\"line_stop\\\":9,\\\"col_start\\\":17,\\\"col_stop\\\":18,\\\"path\\\":\\\"compiler-test\\\",\\\"content\\\":\\\"    return a == b;\\\"}\"}"
                      op: Eq
                      span:
                        line_start: 9
                        line_stop: 9
                        col_start: 12
                        col_stop: 18
                        path: compiler-test
                        content: "    return a == b;"
                  span:
                    line_start: 9
                    line_stop: 9
                    col_start: 5
                    col_stop: 18
                    path: compiler-test
                    content: "    return a == b;"
            span:
              line_start: 4
              line_stop: 10
              col_start: 39
              col_stop: 2
              path: compiler-test
              content: "function main(a: u32, b: u32) -> bool {\n...\n}"
          span:
            line_start: 4
            line_stop: 10
            col_start: 1
            col_stop: 2
            path: compiler-test
            content: "function main(a: u32, b: u32) -> bool {\n...\n}\n\n\n\n"
