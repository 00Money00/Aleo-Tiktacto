---
namespace: ParseStatement
expectation: Pass
outputs:
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":5,\\\"col_stop\\\":6,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let x: u8 = expr;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 5
            col_stop: 6
            path: ""
            content: "let x: u8 = expr;"
      parened: false
      type_:
        IntegerType: U8
      value:
        Identifier: "{\"name\":\"expr\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":13,\\\"col_stop\\\":17,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let x: u8 = expr;\\\"}\"}"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 17
        path: ""
        content: "let x: u8 = expr;"
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":5,\\\"col_stop\\\":6,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let x: () = ();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 5
            col_stop: 6
            path: ""
            content: "let x: () = ();"
      parened: false
      type_:
        Tuple: []
      value:
        TupleInit:
          elements: []
          span:
            line_start: 1
            line_stop: 1
            col_start: 13
            col_stop: 15
            path: ""
            content: "let x: () = ();"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 15
        path: ""
        content: "let x: () = ();"
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":5,\\\"col_stop\\\":6,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let x: u16 = x+y;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 5
            col_stop: 6
            path: ""
            content: "let x: u16 = x+y;"
      parened: false
      type_:
        IntegerType: U16
      value:
        Binary:
          left:
            Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":14,\\\"col_stop\\\":15,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let x: u16 = x+y;\\\"}\"}"
          right:
            Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":16,\\\"col_stop\\\":17,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let x: u16 = x+y;\\\"}\"}"
          op: Add
          span:
            line_start: 1
            line_stop: 1
            col_start: 14
            col_stop: 17
            path: ""
            content: "let x: u16 = x+y;"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 17
        path: ""
        content: "let x: u16 = x+y;"
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":5,\\\"col_stop\\\":6,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let x: (u32, u64) = (x,y);\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 5
            col_stop: 6
            path: ""
            content: "let x: (u32, u64) = (x,y);"
      parened: false
      type_:
        Tuple:
          - IntegerType: U32
          - IntegerType: U64
      value:
        TupleInit:
          elements:
            - Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":22,\\\"col_stop\\\":23,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let x: (u32, u64) = (x,y);\\\"}\"}"
            - Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":24,\\\"col_stop\\\":25,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let x: (u32, u64) = (x,y);\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 21
            col_stop: 26
            path: ""
            content: "let x: (u32, u64) = (x,y);"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 26
        path: ""
        content: "let x: (u32, u64) = (x,y);"
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":5,\\\"col_stop\\\":6,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let x: u8 = x();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 5
            col_stop: 6
            path: ""
            content: "let x: u8 = x();"
      parened: false
      type_:
        IntegerType: U8
      value:
        Call:
          function:
            Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":13,\\\"col_stop\\\":14,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let x: u8 = x();\\\"}\"}"
          arguments: []
          span:
            line_start: 1
            line_stop: 1
            col_start: 13
            col_stop: 16
            path: ""
            content: "let x: u8 = x();"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 16
        path: ""
        content: "let x: u8 = x();"
  - Definition:
      declaration_type: Const
      variable_names:
        - mutable: false
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":7,\\\"col_stop\\\":8,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const x: i8 = expr;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 7
            col_stop: 8
            path: ""
            content: "const x: i8 = expr;"
      parened: false
      type_:
        IntegerType: I8
      value:
        Identifier: "{\"name\":\"expr\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":15,\\\"col_stop\\\":19,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const x: i8 = expr;\\\"}\"}"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 19
        path: ""
        content: "const x: i8 = expr;"
  - Definition:
      declaration_type: Const
      variable_names:
        - mutable: false
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":7,\\\"col_stop\\\":8,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const x: () = ();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 7
            col_stop: 8
            path: ""
            content: "const x: () = ();"
      parened: false
      type_:
        Tuple: []
      value:
        TupleInit:
          elements: []
          span:
            line_start: 1
            line_stop: 1
            col_start: 15
            col_stop: 17
            path: ""
            content: "const x: () = ();"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 17
        path: ""
        content: "const x: () = ();"
  - Definition:
      declaration_type: Const
      variable_names:
        - mutable: false
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":7,\\\"col_stop\\\":8,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const x: i16 = x+y;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 7
            col_stop: 8
            path: ""
            content: "const x: i16 = x+y;"
      parened: false
      type_:
        IntegerType: I16
      value:
        Binary:
          left:
            Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":16,\\\"col_stop\\\":17,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const x: i16 = x+y;\\\"}\"}"
          right:
            Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":18,\\\"col_stop\\\":19,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const x: i16 = x+y;\\\"}\"}"
          op: Add
          span:
            line_start: 1
            line_stop: 1
            col_start: 16
            col_stop: 19
            path: ""
            content: "const x: i16 = x+y;"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 19
        path: ""
        content: "const x: i16 = x+y;"
  - Definition:
      declaration_type: Const
      variable_names:
        - mutable: false
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":7,\\\"col_stop\\\":8,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const x: (i32, i64) = (x,y);\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 7
            col_stop: 8
            path: ""
            content: "const x: (i32, i64) = (x,y);"
      parened: false
      type_:
        Tuple:
          - IntegerType: I32
          - IntegerType: I64
      value:
        TupleInit:
          elements:
            - Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":24,\\\"col_stop\\\":25,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const x: (i32, i64) = (x,y);\\\"}\"}"
            - Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":26,\\\"col_stop\\\":27,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const x: (i32, i64) = (x,y);\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 23
            col_stop: 28
            path: ""
            content: "const x: (i32, i64) = (x,y);"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 28
        path: ""
        content: "const x: (i32, i64) = (x,y);"
  - Definition:
      declaration_type: Const
      variable_names:
        - mutable: false
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":7,\\\"col_stop\\\":8,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const x: i8 = x();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 7
            col_stop: 8
            path: ""
            content: "const x: i8 = x();"
      parened: false
      type_:
        IntegerType: I8
      value:
        Call:
          function:
            Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":15,\\\"col_stop\\\":16,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const x: i8 = x();\\\"}\"}"
          arguments: []
          span:
            line_start: 1
            line_stop: 1
            col_start: 15
            col_stop: 18
            path: ""
            content: "const x: i8 = x();"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 18
        path: ""
        content: "const x: i8 = x();"
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":5,\\\"col_stop\\\":6,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let x: u32 = expr;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 5
            col_stop: 6
            path: ""
            content: "let x: u32 = expr;"
      parened: false
      type_:
        IntegerType: U32
      value:
        Identifier: "{\"name\":\"expr\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":14,\\\"col_stop\\\":18,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let x: u32 = expr;\\\"}\"}"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 18
        path: ""
        content: "let x: u32 = expr;"
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":5,\\\"col_stop\\\":6,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let x: u32 = ();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 5
            col_stop: 6
            path: ""
            content: "let x: u32 = ();"
      parened: false
      type_:
        IntegerType: U32
      value:
        TupleInit:
          elements: []
          span:
            line_start: 1
            line_stop: 1
            col_start: 14
            col_stop: 16
            path: ""
            content: "let x: u32 = ();"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 16
        path: ""
        content: "let x: u32 = ();"
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":5,\\\"col_stop\\\":6,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let x: u32 = x+y;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 5
            col_stop: 6
            path: ""
            content: "let x: u32 = x+y;"
      parened: false
      type_:
        IntegerType: U32
      value:
        Binary:
          left:
            Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":14,\\\"col_stop\\\":15,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let x: u32 = x+y;\\\"}\"}"
          right:
            Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":16,\\\"col_stop\\\":17,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let x: u32 = x+y;\\\"}\"}"
          op: Add
          span:
            line_start: 1
            line_stop: 1
            col_start: 14
            col_stop: 17
            path: ""
            content: "let x: u32 = x+y;"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 17
        path: ""
        content: "let x: u32 = x+y;"
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":5,\\\"col_stop\\\":6,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let x: u32 = (x,y);\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 5
            col_stop: 6
            path: ""
            content: "let x: u32 = (x,y);"
      parened: false
      type_:
        IntegerType: U32
      value:
        TupleInit:
          elements:
            - Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":15,\\\"col_stop\\\":16,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let x: u32 = (x,y);\\\"}\"}"
            - Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":17,\\\"col_stop\\\":18,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let x: u32 = (x,y);\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 14
            col_stop: 19
            path: ""
            content: "let x: u32 = (x,y);"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 19
        path: ""
        content: "let x: u32 = (x,y);"
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":5,\\\"col_stop\\\":6,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let x: u32 = x();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 5
            col_stop: 6
            path: ""
            content: "let x: u32 = x();"
      parened: false
      type_:
        IntegerType: U32
      value:
        Call:
          function:
            Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":14,\\\"col_stop\\\":15,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let x: u32 = x();\\\"}\"}"
          arguments: []
          span:
            line_start: 1
            line_stop: 1
            col_start: 14
            col_stop: 17
            path: ""
            content: "let x: u32 = x();"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 17
        path: ""
        content: "let x: u32 = x();"
  - Definition:
      declaration_type: Const
      variable_names:
        - mutable: false
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":7,\\\"col_stop\\\":8,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const x: u32 = expr;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 7
            col_stop: 8
            path: ""
            content: "const x: u32 = expr;"
      parened: false
      type_:
        IntegerType: U32
      value:
        Identifier: "{\"name\":\"expr\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":16,\\\"col_stop\\\":20,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const x: u32 = expr;\\\"}\"}"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 20
        path: ""
        content: "const x: u32 = expr;"
  - Definition:
      declaration_type: Const
      variable_names:
        - mutable: false
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":7,\\\"col_stop\\\":8,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const x: u32 = ();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 7
            col_stop: 8
            path: ""
            content: "const x: u32 = ();"
      parened: false
      type_:
        IntegerType: U32
      value:
        TupleInit:
          elements: []
          span:
            line_start: 1
            line_stop: 1
            col_start: 16
            col_stop: 18
            path: ""
            content: "const x: u32 = ();"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 18
        path: ""
        content: "const x: u32 = ();"
  - Definition:
      declaration_type: Const
      variable_names:
        - mutable: false
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":7,\\\"col_stop\\\":8,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const x: u32 = x+y;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 7
            col_stop: 8
            path: ""
            content: "const x: u32 = x+y;"
      parened: false
      type_:
        IntegerType: U32
      value:
        Binary:
          left:
            Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":16,\\\"col_stop\\\":17,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const x: u32 = x+y;\\\"}\"}"
          right:
            Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":18,\\\"col_stop\\\":19,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const x: u32 = x+y;\\\"}\"}"
          op: Add
          span:
            line_start: 1
            line_stop: 1
            col_start: 16
            col_stop: 19
            path: ""
            content: "const x: u32 = x+y;"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 19
        path: ""
        content: "const x: u32 = x+y;"
  - Definition:
      declaration_type: Const
      variable_names:
        - mutable: false
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":7,\\\"col_stop\\\":8,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const x: u32 = (x,y);\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 7
            col_stop: 8
            path: ""
            content: "const x: u32 = (x,y);"
      parened: false
      type_:
        IntegerType: U32
      value:
        TupleInit:
          elements:
            - Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":17,\\\"col_stop\\\":18,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const x: u32 = (x,y);\\\"}\"}"
            - Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":19,\\\"col_stop\\\":20,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const x: u32 = (x,y);\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 16
            col_stop: 21
            path: ""
            content: "const x: u32 = (x,y);"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 21
        path: ""
        content: "const x: u32 = (x,y);"
  - Definition:
      declaration_type: Const
      variable_names:
        - mutable: false
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":7,\\\"col_stop\\\":8,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const x: u32 = x();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 7
            col_stop: 8
            path: ""
            content: "const x: u32 = x();"
      parened: false
      type_:
        IntegerType: U32
      value:
        Call:
          function:
            Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":16,\\\"col_stop\\\":17,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const x: u32 = x();\\\"}\"}"
          arguments: []
          span:
            line_start: 1
            line_stop: 1
            col_start: 16
            col_stop: 19
            path: ""
            content: "const x: u32 = x();"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 19
        path: ""
        content: "const x: u32 = x();"
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":6,\\\"col_stop\\\":7,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let (x, y): (field, group) = expr;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 6
            col_stop: 7
            path: ""
            content: "let (x, y): (field, group) = expr;"
        - mutable: true
          identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":9,\\\"col_stop\\\":10,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let (x, y): (field, group) = expr;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 9
            col_stop: 10
            path: ""
            content: "let (x, y): (field, group) = expr;"
      parened: true
      type_:
        Tuple:
          - Field
          - Group
      value:
        Identifier: "{\"name\":\"expr\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":30,\\\"col_stop\\\":34,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let (x, y): (field, group) = expr;\\\"}\"}"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 34
        path: ""
        content: "let (x, y): (field, group) = expr;"
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":6,\\\"col_stop\\\":7,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let (x, y): (u8, u16) = ();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 6
            col_stop: 7
            path: ""
            content: "let (x, y): (u8, u16) = ();"
        - mutable: true
          identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":9,\\\"col_stop\\\":10,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let (x, y): (u8, u16) = ();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 9
            col_stop: 10
            path: ""
            content: "let (x, y): (u8, u16) = ();"
      parened: true
      type_:
        Tuple:
          - IntegerType: U8
          - IntegerType: U16
      value:
        TupleInit:
          elements: []
          span:
            line_start: 1
            line_stop: 1
            col_start: 25
            col_stop: 27
            path: ""
            content: "let (x, y): (u8, u16) = ();"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 27
        path: ""
        content: "let (x, y): (u8, u16) = ();"
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":6,\\\"col_stop\\\":7,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let (x, y): (i8, i16) = x+y;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 6
            col_stop: 7
            path: ""
            content: "let (x, y): (i8, i16) = x+y;"
        - mutable: true
          identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":9,\\\"col_stop\\\":10,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let (x, y): (i8, i16) = x+y;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 9
            col_stop: 10
            path: ""
            content: "let (x, y): (i8, i16) = x+y;"
      parened: true
      type_:
        Tuple:
          - IntegerType: I8
          - IntegerType: I16
      value:
        Binary:
          left:
            Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":25,\\\"col_stop\\\":26,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let (x, y): (i8, i16) = x+y;\\\"}\"}"
          right:
            Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":27,\\\"col_stop\\\":28,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let (x, y): (i8, i16) = x+y;\\\"}\"}"
          op: Add
          span:
            line_start: 1
            line_stop: 1
            col_start: 25
            col_stop: 28
            path: ""
            content: "let (x, y): (i8, i16) = x+y;"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 28
        path: ""
        content: "let (x, y): (i8, i16) = x+y;"
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":6,\\\"col_stop\\\":7,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let (x, y): (u32, u64) = (x,y);\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 6
            col_stop: 7
            path: ""
            content: "let (x, y): (u32, u64) = (x,y);"
        - mutable: true
          identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":9,\\\"col_stop\\\":10,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let (x, y): (u32, u64) = (x,y);\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 9
            col_stop: 10
            path: ""
            content: "let (x, y): (u32, u64) = (x,y);"
      parened: true
      type_:
        Tuple:
          - IntegerType: U32
          - IntegerType: U64
      value:
        TupleInit:
          elements:
            - Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":27,\\\"col_stop\\\":28,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let (x, y): (u32, u64) = (x,y);\\\"}\"}"
            - Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":29,\\\"col_stop\\\":30,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let (x, y): (u32, u64) = (x,y);\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 26
            col_stop: 31
            path: ""
            content: "let (x, y): (u32, u64) = (x,y);"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 31
        path: ""
        content: "let (x, y): (u32, u64) = (x,y);"
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":6,\\\"col_stop\\\":7,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let (x, y): (i32, i64) = x();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 6
            col_stop: 7
            path: ""
            content: "let (x, y): (i32, i64) = x();"
        - mutable: true
          identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":9,\\\"col_stop\\\":10,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let (x, y): (i32, i64) = x();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 9
            col_stop: 10
            path: ""
            content: "let (x, y): (i32, i64) = x();"
      parened: true
      type_:
        Tuple:
          - IntegerType: I32
          - IntegerType: I64
      value:
        Call:
          function:
            Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":26,\\\"col_stop\\\":27,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let (x, y): (i32, i64) = x();\\\"}\"}"
          arguments: []
          span:
            line_start: 1
            line_stop: 1
            col_start: 26
            col_stop: 29
            path: ""
            content: "let (x, y): (i32, i64) = x();"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 29
        path: ""
        content: "let (x, y): (i32, i64) = x();"
  - Definition:
      declaration_type: Const
      variable_names:
        - mutable: false
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":8,\\\"col_stop\\\":9,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const (x, y): (field, group)  = expr;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 8
            col_stop: 9
            path: ""
            content: "const (x, y): (field, group)  = expr;"
        - mutable: false
          identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":11,\\\"col_stop\\\":12,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const (x, y): (field, group)  = expr;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 11
            col_stop: 12
            path: ""
            content: "const (x, y): (field, group)  = expr;"
      parened: true
      type_:
        Tuple:
          - Field
          - Group
      value:
        Identifier: "{\"name\":\"expr\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":33,\\\"col_stop\\\":37,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const (x, y): (field, group)  = expr;\\\"}\"}"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 37
        path: ""
        content: "const (x, y): (field, group)  = expr;"
  - Definition:
      declaration_type: Const
      variable_names:
        - mutable: false
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":8,\\\"col_stop\\\":9,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const (x, y): (u8, u16) = ();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 8
            col_stop: 9
            path: ""
            content: "const (x, y): (u8, u16) = ();"
        - mutable: false
          identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":11,\\\"col_stop\\\":12,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const (x, y): (u8, u16) = ();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 11
            col_stop: 12
            path: ""
            content: "const (x, y): (u8, u16) = ();"
      parened: true
      type_:
        Tuple:
          - IntegerType: U8
          - IntegerType: U16
      value:
        TupleInit:
          elements: []
          span:
            line_start: 1
            line_stop: 1
            col_start: 27
            col_stop: 29
            path: ""
            content: "const (x, y): (u8, u16) = ();"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 29
        path: ""
        content: "const (x, y): (u8, u16) = ();"
  - Definition:
      declaration_type: Const
      variable_names:
        - mutable: false
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":8,\\\"col_stop\\\":9,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const (x, y): (i8, i16) = x+y;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 8
            col_stop: 9
            path: ""
            content: "const (x, y): (i8, i16) = x+y;"
        - mutable: false
          identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":11,\\\"col_stop\\\":12,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const (x, y): (i8, i16) = x+y;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 11
            col_stop: 12
            path: ""
            content: "const (x, y): (i8, i16) = x+y;"
      parened: true
      type_:
        Tuple:
          - IntegerType: I8
          - IntegerType: I16
      value:
        Binary:
          left:
            Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":27,\\\"col_stop\\\":28,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const (x, y): (i8, i16) = x+y;\\\"}\"}"
          right:
            Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":29,\\\"col_stop\\\":30,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const (x, y): (i8, i16) = x+y;\\\"}\"}"
          op: Add
          span:
            line_start: 1
            line_stop: 1
            col_start: 27
            col_stop: 30
            path: ""
            content: "const (x, y): (i8, i16) = x+y;"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 30
        path: ""
        content: "const (x, y): (i8, i16) = x+y;"
  - Definition:
      declaration_type: Const
      variable_names:
        - mutable: false
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":8,\\\"col_stop\\\":9,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const (x, y): (u32, u64) = (x,y);\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 8
            col_stop: 9
            path: ""
            content: "const (x, y): (u32, u64) = (x,y);"
        - mutable: false
          identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":11,\\\"col_stop\\\":12,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const (x, y): (u32, u64) = (x,y);\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 11
            col_stop: 12
            path: ""
            content: "const (x, y): (u32, u64) = (x,y);"
      parened: true
      type_:
        Tuple:
          - IntegerType: U32
          - IntegerType: U64
      value:
        TupleInit:
          elements:
            - Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":29,\\\"col_stop\\\":30,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const (x, y): (u32, u64) = (x,y);\\\"}\"}"
            - Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":31,\\\"col_stop\\\":32,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const (x, y): (u32, u64) = (x,y);\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 28
            col_stop: 33
            path: ""
            content: "const (x, y): (u32, u64) = (x,y);"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 33
        path: ""
        content: "const (x, y): (u32, u64) = (x,y);"
  - Definition:
      declaration_type: Const
      variable_names:
        - mutable: false
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":8,\\\"col_stop\\\":9,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const (x, y): (i32, i64) = x();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 8
            col_stop: 9
            path: ""
            content: "const (x, y): (i32, i64) = x();"
        - mutable: false
          identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":11,\\\"col_stop\\\":12,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const (x, y): (i32, i64) = x();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 11
            col_stop: 12
            path: ""
            content: "const (x, y): (i32, i64) = x();"
      parened: true
      type_:
        Tuple:
          - IntegerType: I32
          - IntegerType: I64
      value:
        Call:
          function:
            Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":28,\\\"col_stop\\\":29,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const (x, y): (i32, i64) = x();\\\"}\"}"
          arguments: []
          span:
            line_start: 1
            line_stop: 1
            col_start: 28
            col_stop: 31
            path: ""
            content: "const (x, y): (i32, i64) = x();"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 31
        path: ""
        content: "const (x, y): (i32, i64) = x();"
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":6,\\\"col_stop\\\":7,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let (x, y): u32 = expr;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 6
            col_stop: 7
            path: ""
            content: "let (x, y): u32 = expr;"
        - mutable: true
          identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":9,\\\"col_stop\\\":10,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let (x, y): u32 = expr;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 9
            col_stop: 10
            path: ""
            content: "let (x, y): u32 = expr;"
      parened: true
      type_:
        IntegerType: U32
      value:
        Identifier: "{\"name\":\"expr\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":19,\\\"col_stop\\\":23,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let (x, y): u32 = expr;\\\"}\"}"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 23
        path: ""
        content: "let (x, y): u32 = expr;"
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":6,\\\"col_stop\\\":7,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let (x, y): u32 = ();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 6
            col_stop: 7
            path: ""
            content: "let (x, y): u32 = ();"
        - mutable: true
          identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":9,\\\"col_stop\\\":10,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let (x, y): u32 = ();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 9
            col_stop: 10
            path: ""
            content: "let (x, y): u32 = ();"
      parened: true
      type_:
        IntegerType: U32
      value:
        TupleInit:
          elements: []
          span:
            line_start: 1
            line_stop: 1
            col_start: 19
            col_stop: 21
            path: ""
            content: "let (x, y): u32 = ();"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 21
        path: ""
        content: "let (x, y): u32 = ();"
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":6,\\\"col_stop\\\":7,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let (x, y): u32 = x+y;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 6
            col_stop: 7
            path: ""
            content: "let (x, y): u32 = x+y;"
        - mutable: true
          identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":9,\\\"col_stop\\\":10,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let (x, y): u32 = x+y;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 9
            col_stop: 10
            path: ""
            content: "let (x, y): u32 = x+y;"
      parened: true
      type_:
        IntegerType: U32
      value:
        Binary:
          left:
            Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":19,\\\"col_stop\\\":20,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let (x, y): u32 = x+y;\\\"}\"}"
          right:
            Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":21,\\\"col_stop\\\":22,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let (x, y): u32 = x+y;\\\"}\"}"
          op: Add
          span:
            line_start: 1
            line_stop: 1
            col_start: 19
            col_stop: 22
            path: ""
            content: "let (x, y): u32 = x+y;"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 22
        path: ""
        content: "let (x, y): u32 = x+y;"
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":6,\\\"col_stop\\\":7,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let (x, y): u32 = (x,y);\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 6
            col_stop: 7
            path: ""
            content: "let (x, y): u32 = (x,y);"
        - mutable: true
          identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":9,\\\"col_stop\\\":10,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let (x, y): u32 = (x,y);\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 9
            col_stop: 10
            path: ""
            content: "let (x, y): u32 = (x,y);"
      parened: true
      type_:
        IntegerType: U32
      value:
        TupleInit:
          elements:
            - Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":20,\\\"col_stop\\\":21,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let (x, y): u32 = (x,y);\\\"}\"}"
            - Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":22,\\\"col_stop\\\":23,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let (x, y): u32 = (x,y);\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 19
            col_stop: 24
            path: ""
            content: "let (x, y): u32 = (x,y);"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 24
        path: ""
        content: "let (x, y): u32 = (x,y);"
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":6,\\\"col_stop\\\":7,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let (x, y): u32 = x();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 6
            col_stop: 7
            path: ""
            content: "let (x, y): u32 = x();"
        - mutable: true
          identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":9,\\\"col_stop\\\":10,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let (x, y): u32 = x();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 9
            col_stop: 10
            path: ""
            content: "let (x, y): u32 = x();"
      parened: true
      type_:
        IntegerType: U32
      value:
        Call:
          function:
            Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":19,\\\"col_stop\\\":20,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let (x, y): u32 = x();\\\"}\"}"
          arguments: []
          span:
            line_start: 1
            line_stop: 1
            col_start: 19
            col_stop: 22
            path: ""
            content: "let (x, y): u32 = x();"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 22
        path: ""
        content: "let (x, y): u32 = x();"
  - Definition:
      declaration_type: Const
      variable_names:
        - mutable: false
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":8,\\\"col_stop\\\":9,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const (x, y): u32 = expr;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 8
            col_stop: 9
            path: ""
            content: "const (x, y): u32 = expr;"
        - mutable: false
          identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":11,\\\"col_stop\\\":12,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const (x, y): u32 = expr;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 11
            col_stop: 12
            path: ""
            content: "const (x, y): u32 = expr;"
      parened: true
      type_:
        IntegerType: U32
      value:
        Identifier: "{\"name\":\"expr\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":21,\\\"col_stop\\\":25,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const (x, y): u32 = expr;\\\"}\"}"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 25
        path: ""
        content: "const (x, y): u32 = expr;"
  - Definition:
      declaration_type: Const
      variable_names:
        - mutable: false
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":8,\\\"col_stop\\\":9,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const (x, y): u32 = ();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 8
            col_stop: 9
            path: ""
            content: "const (x, y): u32 = ();"
        - mutable: false
          identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":11,\\\"col_stop\\\":12,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const (x, y): u32 = ();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 11
            col_stop: 12
            path: ""
            content: "const (x, y): u32 = ();"
      parened: true
      type_:
        IntegerType: U32
      value:
        TupleInit:
          elements: []
          span:
            line_start: 1
            line_stop: 1
            col_start: 21
            col_stop: 23
            path: ""
            content: "const (x, y): u32 = ();"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 23
        path: ""
        content: "const (x, y): u32 = ();"
  - Definition:
      declaration_type: Const
      variable_names:
        - mutable: false
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":8,\\\"col_stop\\\":9,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const (x, y): u32 = x+y;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 8
            col_stop: 9
            path: ""
            content: "const (x, y): u32 = x+y;"
        - mutable: false
          identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":11,\\\"col_stop\\\":12,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const (x, y): u32 = x+y;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 11
            col_stop: 12
            path: ""
            content: "const (x, y): u32 = x+y;"
      parened: true
      type_:
        IntegerType: U32
      value:
        Binary:
          left:
            Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":21,\\\"col_stop\\\":22,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const (x, y): u32 = x+y;\\\"}\"}"
          right:
            Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":23,\\\"col_stop\\\":24,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const (x, y): u32 = x+y;\\\"}\"}"
          op: Add
          span:
            line_start: 1
            line_stop: 1
            col_start: 21
            col_stop: 24
            path: ""
            content: "const (x, y): u32 = x+y;"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 24
        path: ""
        content: "const (x, y): u32 = x+y;"
  - Definition:
      declaration_type: Const
      variable_names:
        - mutable: false
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":8,\\\"col_stop\\\":9,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const (x, y): u32 = (x,y);\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 8
            col_stop: 9
            path: ""
            content: "const (x, y): u32 = (x,y);"
        - mutable: false
          identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":11,\\\"col_stop\\\":12,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const (x, y): u32 = (x,y);\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 11
            col_stop: 12
            path: ""
            content: "const (x, y): u32 = (x,y);"
      parened: true
      type_:
        IntegerType: U32
      value:
        TupleInit:
          elements:
            - Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":22,\\\"col_stop\\\":23,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const (x, y): u32 = (x,y);\\\"}\"}"
            - Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":24,\\\"col_stop\\\":25,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const (x, y): u32 = (x,y);\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 21
            col_stop: 26
            path: ""
            content: "const (x, y): u32 = (x,y);"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 26
        path: ""
        content: "const (x, y): u32 = (x,y);"
  - Definition:
      declaration_type: Const
      variable_names:
        - mutable: false
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":8,\\\"col_stop\\\":9,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const (x, y): u32 = x();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 8
            col_stop: 9
            path: ""
            content: "const (x, y): u32 = x();"
        - mutable: false
          identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":11,\\\"col_stop\\\":12,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const (x, y): u32 = x();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 11
            col_stop: 12
            path: ""
            content: "const (x, y): u32 = x();"
      parened: true
      type_:
        IntegerType: U32
      value:
        Call:
          function:
            Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":21,\\\"col_stop\\\":22,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"const (x, y): u32 = x();\\\"}\"}"
          arguments: []
          span:
            line_start: 1
            line_stop: 1
            col_start: 21
            col_stop: 24
            path: ""
            content: "const (x, y): u32 = x();"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 24
        path: ""
        content: "const (x, y): u32 = x();"
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":6,\\\"col_stop\\\":7,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let (x,y,): () = ();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 6
            col_stop: 7
            path: ""
            content: "let (x,y,): () = ();"
        - mutable: true
          identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":8,\\\"col_stop\\\":9,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let (x,y,): () = ();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 8
            col_stop: 9
            path: ""
            content: "let (x,y,): () = ();"
      parened: true
      type_:
        Tuple: []
      value:
        TupleInit:
          elements: []
          span:
            line_start: 1
            line_stop: 1
            col_start: 18
            col_stop: 20
            path: ""
            content: "let (x,y,): () = ();"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 20
        path: ""
        content: "let (x,y,): () = ();"
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":6,\\\"col_stop\\\":7,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let (x,): u8 = ();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 6
            col_stop: 7
            path: ""
            content: "let (x,): u8 = ();"
      parened: true
      type_:
        IntegerType: U8
      value:
        TupleInit:
          elements: []
          span:
            line_start: 1
            line_stop: 1
            col_start: 16
            col_stop: 18
            path: ""
            content: "let (x,): u8 = ();"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 18
        path: ""
        content: "let (x,): u8 = ();"
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":5,\\\"col_stop\\\":6,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let x: [char; _] = \\\\\\\"Hello, World!\\\\\\\";\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 5
            col_stop: 6
            path: ""
            content: "let x: [char; _] = \"Hello, World!\";"
      parened: false
      type_:
        Array:
          - Char
          - - value: "0"
      value:
        Value:
          String:
            - - Scalar: 72
              - Scalar: 101
              - Scalar: 108
              - Scalar: 108
              - Scalar: 111
              - Scalar: 44
              - Scalar: 32
              - Scalar: 87
              - Scalar: 111
              - Scalar: 114
              - Scalar: 108
              - Scalar: 100
              - Scalar: 33
            - span:
                line_start: 1
                line_stop: 1
                col_start: 20
                col_stop: 35
                path: ""
                content: "let x: [char; _] = \"Hello, World!\";"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 35
        path: ""
        content: "let x: [char; _] = \"Hello, World!\";"
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":5,\\\"col_stop\\\":6,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"let x: [[u8; 2]; 2] = [[0,0], [0,0]];\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 5
            col_stop: 6
            path: ""
            content: "let x: [[u8; 2]; 2] = [[0,0], [0,0]];"
      parened: false
      type_:
        Array:
          - Array:
              - IntegerType: U8
              - - value: "2"
          - - value: "2"
      value:
        ArrayInline:
          elements:
            - Expression:
                ArrayInline:
                  elements:
                    - Expression:
                        Value:
                          Implicit:
                            - "0"
                            - span:
                                line_start: 1
                                line_stop: 1
                                col_start: 25
                                col_stop: 26
                                path: ""
                                content: "let x: [[u8; 2]; 2] = [[0,0], [0,0]];"
                    - Expression:
                        Value:
                          Implicit:
                            - "0"
                            - span:
                                line_start: 1
                                line_stop: 1
                                col_start: 27
                                col_stop: 28
                                path: ""
                                content: "let x: [[u8; 2]; 2] = [[0,0], [0,0]];"
                  span:
                    line_start: 1
                    line_stop: 1
                    col_start: 24
                    col_stop: 29
                    path: ""
                    content: "let x: [[u8; 2]; 2] = [[0,0], [0,0]];"
            - Expression:
                ArrayInline:
                  elements:
                    - Expression:
                        Value:
                          Implicit:
                            - "0"
                            - span:
                                line_start: 1
                                line_stop: 1
                                col_start: 32
                                col_stop: 33
                                path: ""
                                content: "let x: [[u8; 2]; 2] = [[0,0], [0,0]];"
                    - Expression:
                        Value:
                          Implicit:
                            - "0"
                            - span:
                                line_start: 1
                                line_stop: 1
                                col_start: 34
                                col_stop: 35
                                path: ""
                                content: "let x: [[u8; 2]; 2] = [[0,0], [0,0]];"
                  span:
                    line_start: 1
                    line_stop: 1
                    col_start: 31
                    col_stop: 36
                    path: ""
                    content: "let x: [[u8; 2]; 2] = [[0,0], [0,0]];"
          span:
            line_start: 1
            line_stop: 1
            col_start: 23
            col_stop: 37
            path: ""
            content: "let x: [[u8; 2]; 2] = [[0,0], [0,0]];"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 37
        path: ""
        content: "let x: [[u8; 2]; 2] = [[0,0], [0,0]];"
