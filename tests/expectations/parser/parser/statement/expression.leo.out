---
namespace: ParseStatement
expectation: Pass
outputs:
  - Expression:
      expression:
        Identifier: "{\"name\":\"expr\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":1,\\\"col_stop\\\":5,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"expr;\\\"}\"}"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 5
        path: ""
        content: expr;
  - Expression:
      expression:
        Binary:
          left:
            Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":1,\\\"col_stop\\\":2,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"x+y;\\\"}\"}"
          right:
            Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":3,\\\"col_stop\\\":4,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"x+y;\\\"}\"}"
          op: Add
          span:
            line_start: 1
            line_stop: 1
            col_start: 1
            col_stop: 4
            path: ""
            content: x+y;
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 4
        path: ""
        content: x+y;
  - Expression:
      expression:
        Call:
          function:
            Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":1,\\\"col_stop\\\":2,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"x();\\\"}\"}"
          arguments: []
          span:
            line_start: 1
            line_stop: 1
            col_start: 1
            col_stop: 4
            path: ""
            content: x();
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 4
        path: ""
        content: x();
