---
namespace: ParseStatement
expectation: Pass
outputs:
  - Iteration:
      variable: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":5,\\\"col_stop\\\":6,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"for x: u8 in 0u8..7u8 {}\\\"}\"}"
      type_:
        IntegerType: U8
      start:
        Value:
          Integer:
            - U8
            - "0"
            - span:
                line_start: 1
                line_stop: 1
                col_start: 14
                col_stop: 17
                path: ""
                content: "for x: u8 in 0u8..7u8 {}"
      stop:
        Value:
          Integer:
            - U8
            - "7"
            - span:
                line_start: 1
                line_stop: 1
                col_start: 19
                col_stop: 22
                path: ""
                content: "for x: u8 in 0u8..7u8 {}"
      inclusive: false
      block:
        statements: []
        span:
          line_start: 1
          line_stop: 1
          col_start: 23
          col_stop: 25
          path: ""
          content: "for x: u8 in 0u8..7u8 {}"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 25
        path: ""
        content: "for x: u8 in 0u8..7u8 {}"
  - Iteration:
      variable: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":5,\\\"col_stop\\\":6,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"for x: i64 in 0i64..7i64 {\\\"}\"}"
      type_:
        IntegerType: I64
      start:
        Value:
          Integer:
            - I64
            - "0"
            - span:
                line_start: 1
                line_stop: 1
                col_start: 15
                col_stop: 19
                path: ""
                content: "for x: i64 in 0i64..7i64 {"
      stop:
        Value:
          Integer:
            - I64
            - "7"
            - span:
                line_start: 1
                line_stop: 1
                col_start: 21
                col_stop: 25
                path: ""
                content: "for x: i64 in 0i64..7i64 {"
      inclusive: false
      block:
        statements:
          - Return:
              expression:
                TupleInit:
                  elements: []
                  span:
                    line_start: 2
                    line_stop: 2
                    col_start: 8
                    col_stop: 10
                    path: ""
                    content: return ();
              span:
                line_start: 2
                line_stop: 2
                col_start: 1
                col_stop: 10
                path: ""
                content: return ();
        span:
          line_start: 1
          line_stop: 3
          col_start: 26
          col_stop: 2
          path: ""
          content: "for x: i64 in 0i64..7i64 {\n     ...\n}"
      span:
        line_start: 1
        line_stop: 3
        col_start: 1
        col_stop: 2
        path: ""
        content: "for x: i64 in 0i64..7i64 {\n     ...\n}"
  - Iteration:
      variable: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":5,\\\"col_stop\\\":6,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"for x: field in 0field..99u8 {\\\"}\"}"
      type_: Field
      start:
        Value:
          Field:
            - "0"
            - span:
                line_start: 1
                line_stop: 1
                col_start: 17
                col_stop: 23
                path: ""
                content: "for x: field in 0field..99u8 {"
      stop:
        Value:
          Integer:
            - U8
            - "99"
            - span:
                line_start: 1
                line_stop: 1
                col_start: 25
                col_stop: 29
                path: ""
                content: "for x: field in 0field..99u8 {"
      inclusive: false
      block:
        statements:
          - Return:
              expression:
                TupleInit:
                  elements: []
                  span:
                    line_start: 2
                    line_stop: 2
                    col_start: 8
                    col_stop: 10
                    path: ""
                    content: return ();
              span:
                line_start: 2
                line_stop: 2
                col_start: 1
                col_stop: 10
                path: ""
                content: return ();
        span:
          line_start: 1
          line_stop: 3
          col_start: 30
          col_stop: 2
          path: ""
          content: "for x: field in 0field..99u8 {\n     ...\n}"
      span:
        line_start: 1
        line_stop: 3
        col_start: 1
        col_stop: 2
        path: ""
        content: "for x: field in 0field..99u8 {\n     ...\n}"
  - Iteration:
      variable: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":5,\\\"col_stop\\\":6,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"for x: bool in 0u8..Self {\\\"}\"}"
      type_: Boolean
      start:
        Value:
          Integer:
            - U8
            - "0"
            - span:
                line_start: 1
                line_stop: 1
                col_start: 16
                col_stop: 19
                path: ""
                content: "for x: bool in 0u8..Self {"
      stop:
        Identifier: "{\"name\":\"Self\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":21,\\\"col_stop\\\":25,\\\"path\\\":\\\"\\\",\\\"content\\\":\\\"for x: bool in 0u8..Self {\\\"}\"}"
      inclusive: false
      block:
        statements:
          - Return:
              expression:
                TupleInit:
                  elements: []
                  span:
                    line_start: 2
                    line_stop: 2
                    col_start: 8
                    col_stop: 10
                    path: ""
                    content: return ();
              span:
                line_start: 2
                line_stop: 2
                col_start: 1
                col_stop: 10
                path: ""
                content: return ();
        span:
          line_start: 1
          line_stop: 3
          col_start: 26
          col_stop: 2
          path: ""
          content: "for x: bool in 0u8..Self {\n     ...\n}"
      span:
        line_start: 1
        line_stop: 3
        col_start: 1
        col_stop: 2
        path: ""
        content: "for x: bool in 0u8..Self {\n     ...\n}"
