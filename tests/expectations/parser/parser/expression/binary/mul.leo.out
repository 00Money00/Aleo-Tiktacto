---
namespace: ParseExpression
expectation: Pass
outputs:
  - Binary:
      left:
        Value:
          Integer:
            - U8
            - "1"
            - span:
                line_start: 1
                line_stop: 1
                col_start: 1
                col_stop: 4
                path: ""
                content: 1u8 * 1u8
      right:
        Value:
          Integer:
            - U8
            - "1"
            - span:
                line_start: 1
                line_stop: 1
                col_start: 7
                col_stop: 10
                path: ""
                content: 1u8 * 1u8
      op: Mul
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 10
        path: ""
        content: 1u8 * 1u8
  - Binary:
      left:
        Value:
          Integer:
            - U8
            - "2"
            - span:
                line_start: 1
                line_stop: 1
                col_start: 1
                col_stop: 4
                path: ""
                content: 2u8*3u8
      right:
        Value:
          Integer:
            - U8
            - "3"
            - span:
                line_start: 1
                line_stop: 1
                col_start: 5
                col_stop: 8
                path: ""
                content: 2u8*3u8
      op: Mul
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 8
        path: ""
        content: 2u8*3u8
  - Binary:
      left:
        Binary:
          left:
            Value:
              Integer:
                - U8
                - "1"
                - span:
                    line_start: 1
                    line_stop: 1
                    col_start: 1
                    col_stop: 4
                    path: ""
                    content: 1u8 * 2u8 * 3u8
          right:
            Value:
              Integer:
                - U8
                - "2"
                - span:
                    line_start: 1
                    line_stop: 1
                    col_start: 7
                    col_stop: 10
                    path: ""
                    content: 1u8 * 2u8 * 3u8
          op: Mul
          span:
            line_start: 1
            line_stop: 1
            col_start: 1
            col_stop: 10
            path: ""
            content: 1u8 * 2u8 * 3u8
      right:
        Value:
          Integer:
            - U8
            - "3"
            - span:
                line_start: 1
                line_stop: 1
                col_start: 13
                col_stop: 16
                path: ""
                content: 1u8 * 2u8 * 3u8
      op: Mul
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 16
        path: ""
        content: 1u8 * 2u8 * 3u8
  - Binary:
      left:
        Binary:
          left:
            Value:
              Integer:
                - U8
                - "1"
                - span:
                    line_start: 1
                    line_stop: 1
                    col_start: 1
                    col_stop: 4
                    path: ""
                    content: 1u8 ** 2u8 * 3u8 ** 4u8
          right:
            Value:
              Integer:
                - U8
                - "2"
                - span:
                    line_start: 1
                    line_stop: 1
                    col_start: 8
                    col_stop: 11
                    path: ""
                    content: 1u8 ** 2u8 * 3u8 ** 4u8
          op: Pow
          span:
            line_start: 1
            line_stop: 1
            col_start: 1
            col_stop: 11
            path: ""
            content: 1u8 ** 2u8 * 3u8 ** 4u8
      right:
        Binary:
          left:
            Value:
              Integer:
                - U8
                - "3"
                - span:
                    line_start: 1
                    line_stop: 1
                    col_start: 14
                    col_stop: 17
                    path: ""
                    content: 1u8 ** 2u8 * 3u8 ** 4u8
          right:
            Value:
              Integer:
                - U8
                - "4"
                - span:
                    line_start: 1
                    line_stop: 1
                    col_start: 21
                    col_stop: 24
                    path: ""
                    content: 1u8 ** 2u8 * 3u8 ** 4u8
          op: Pow
          span:
            line_start: 1
            line_stop: 1
            col_start: 14
            col_stop: 24
            path: ""
            content: 1u8 ** 2u8 * 3u8 ** 4u8
      op: Mul
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 24
        path: ""
        content: 1u8 ** 2u8 * 3u8 ** 4u8
  - Binary:
      left:
        Binary:
          left:
            Binary:
              left:
                Value:
                  Integer:
                    - U8
                    - "1"
                    - span:
                        line_start: 1
                        line_stop: 1
                        col_start: 1
                        col_stop: 4
                        path: ""
                        content: 1u8 ** 2u8 * 3u8 ** 4u8 / 5u8 ** 6u8
              right:
                Value:
                  Integer:
                    - U8
                    - "2"
                    - span:
                        line_start: 1
                        line_stop: 1
                        col_start: 8
                        col_stop: 11
                        path: ""
                        content: 1u8 ** 2u8 * 3u8 ** 4u8 / 5u8 ** 6u8
              op: Pow
              span:
                line_start: 1
                line_stop: 1
                col_start: 1
                col_stop: 11
                path: ""
                content: 1u8 ** 2u8 * 3u8 ** 4u8 / 5u8 ** 6u8
          right:
            Binary:
              left:
                Value:
                  Integer:
                    - U8
                    - "3"
                    - span:
                        line_start: 1
                        line_stop: 1
                        col_start: 14
                        col_stop: 17
                        path: ""
                        content: 1u8 ** 2u8 * 3u8 ** 4u8 / 5u8 ** 6u8
              right:
                Value:
                  Integer:
                    - U8
                    - "4"
                    - span:
                        line_start: 1
                        line_stop: 1
                        col_start: 21
                        col_stop: 24
                        path: ""
                        content: 1u8 ** 2u8 * 3u8 ** 4u8 / 5u8 ** 6u8
              op: Pow
              span:
                line_start: 1
                line_stop: 1
                col_start: 14
                col_stop: 24
                path: ""
                content: 1u8 ** 2u8 * 3u8 ** 4u8 / 5u8 ** 6u8
          op: Mul
          span:
            line_start: 1
            line_stop: 1
            col_start: 1
            col_stop: 24
            path: ""
            content: 1u8 ** 2u8 * 3u8 ** 4u8 / 5u8 ** 6u8
      right:
        Binary:
          left:
            Value:
              Integer:
                - U8
                - "5"
                - span:
                    line_start: 1
                    line_stop: 1
                    col_start: 27
                    col_stop: 30
                    path: ""
                    content: 1u8 ** 2u8 * 3u8 ** 4u8 / 5u8 ** 6u8
          right:
            Value:
              Integer:
                - U8
                - "6"
                - span:
                    line_start: 1
                    line_stop: 1
                    col_start: 34
                    col_stop: 37
                    path: ""
                    content: 1u8 ** 2u8 * 3u8 ** 4u8 / 5u8 ** 6u8
          op: Pow
          span:
            line_start: 1
            line_stop: 1
            col_start: 27
            col_stop: 37
            path: ""
            content: 1u8 ** 2u8 * 3u8 ** 4u8 / 5u8 ** 6u8
      op: Div
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 37
        path: ""
        content: 1u8 ** 2u8 * 3u8 ** 4u8 / 5u8 ** 6u8
