---
namespace: ParseExpression
expectation: Pass
outputs:
  - Value:
      String:
        - - Scalar: s
          - Scalar: t
          - Scalar: r
          - Scalar: i
          - Scalar: n
          - Scalar: g
        - line_start: 1
          line_stop: 1
          col_start: 1
          col_stop: 9
          path: test
          content: "\"string\""
  - Value:
      String:
        - - Scalar: a
          - Scalar: n
          - Scalar: o
          - Scalar: t
          - Scalar: h
          - Scalar: e
          - Scalar: r
          - Scalar: " "
          - Scalar: "{"
          - Scalar: " "
          - Scalar: "}"
          - Scalar: " "
          - Scalar: s
          - Scalar: t
          - Scalar: r
          - Scalar: i
          - Scalar: n
          - Scalar: g
        - line_start: 1
          line_stop: 1
          col_start: 1
          col_stop: 21
          path: test
          content: "\"another { } string\""
  - Value:
      String:
        - - Scalar: "{"
          - Scalar: " "
          - Scalar: "]"
          - Scalar: " "
          - Scalar: "["
          - Scalar: " "
          - Scalar: ;
          - Scalar: " "
          - Scalar: a
        - line_start: 1
          line_stop: 1
          col_start: 1
          col_stop: 12
          path: test
          content: "\"{ ] [ ; a\""
  - Value:
      String:
        - - Scalar: à¿º
        - line_start: 1
          line_stop: 1
          col_start: 1
          col_stop: 10
          path: test
          content: "\"\\u{FFA}\""
  - Value:
      String:
        - - Scalar: ò¯«º
        - line_start: 1
          line_stop: 1
          col_start: 1
          col_stop: 12
          path: test
          content: "\"\\u{afafa}\""
  - Value:
      String:
        - - Scalar: ê¾¯
        - line_start: 1
          line_stop: 1
          col_start: 1
          col_stop: 11
          path: test
          content: "\"\\u{afaf}\""
  - Value:
      String:
        - - Scalar: à«º
        - line_start: 1
          line_stop: 1
          col_start: 1
          col_stop: 10
          path: test
          content: "\"\\u{afa}\""
  - Value:
      String:
        - - Scalar: Â¯
        - line_start: 1
          line_stop: 1
          col_start: 1
          col_stop: 9
          path: test
          content: "\"\\u{af}\""
  - Value:
      String:
        - - Scalar: "\n"
        - line_start: 1
          line_stop: 1
          col_start: 1
          col_stop: 8
          path: test
          content: "\"\\u{a}\""
  - Value:
      String:
        - - Scalar: "\n"
        - line_start: 1
          line_stop: 1
          col_start: 1
          col_stop: 7
          path: test
          content: "\"\\x0A\""
  - Value:
      String:
        - - Scalar: 
        - line_start: 1
          line_stop: 1
          col_start: 1
          col_stop: 7
          path: test
          content: "\"\\x7F\""
  - Value:
      String:
        - - Scalar: a
          - Scalar: a
          - Scalar: " "
          - Scalar: "\\"
          - Scalar: " "
          - Scalar: "\""
          - Scalar: " "
          - Scalar: " "
          - Scalar: "\n"
          - Scalar: " "
          - Scalar: a
          - Scalar: a
          - Scalar: " "
          - Scalar: "\t"
          - Scalar: " "
          - Scalar: "\r"
          - Scalar: " "
          - Scalar: " "
          - Scalar: "\u0000"
        - line_start: 1
          line_stop: 1
          col_start: 1
          col_stop: 28
          path: test
          content: "\"aa \\\\ \\\"  \\n aa \\t \\r  \\0\""
  - Value:
      String:
        - - Scalar: t
          - Scalar: e
          - Scalar: s
          - Scalar: t
          - Scalar: " "
          - Scalar: ðŸ˜’
          - Scalar: â‚¬
        - line_start: 1
          line_stop: 1
          col_start: 1
          col_stop: 15
          path: test
          content: "\"test ðŸ˜’â‚¬\""
  - Value:
      String:
        - - Scalar: ðŸ˜­
          - Scalar: ðŸ˜‚
          - Scalar: ðŸ˜˜
        - line_start: 1
          line_stop: 1
          col_start: 1
          col_stop: 15
          path: test
          content: "\"ðŸ˜­ðŸ˜‚ðŸ˜˜\""
